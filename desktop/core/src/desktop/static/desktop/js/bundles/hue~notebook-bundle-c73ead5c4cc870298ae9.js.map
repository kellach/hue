{"version":3,"sources":["webpack:///./desktop/core/src/desktop/js/api/apiHelper.js","webpack:///./desktop/core/src/desktop/js/api/apiQueueManager.js","webpack:///./desktop/core/src/desktop/js/api/cancellablePromise.js","webpack:///./desktop/core/src/desktop/js/utils/hueDebug.js","webpack:///./desktop/core/src/desktop/js/utils/huePubSub.js","webpack:///./desktop/core/src/desktop/js/utils/hueUtils.js"],"names":["DOCUMENTS_API","NAV_URLS","NAV_OPT_URLS","fetchCached","options","cacheIdentifier","this","getAssistCacheIdentifier","cachedData","$","totalStorage","cachedId","hash","url","refreshCache","hasExpired","timestamp","cacheType","editor","showSpinner","fetchFunction","data","Date","getTime","e","promise","resolve","successCallback","genericNavOptMultiTableFetch","apiHelper","deferred","Deferred","dbTables","paths","forEach","path","join","ko","mapping","toJSON","Object","keys","request","simplePost","silenceErrors","hueTimestamp","now","errorCallback","reject","CancellablePromise","QueryResult","sourceType","compute","response","_classCallCheck","id","hueUtils","UUID","type","result","status","ApiHelper","self","queueManager","apiQueueManager","huePubSub","subscribe","clearAllCaches","clearDbCache","clearAll","window","performance","navigation","location","href","indexOf","hueDebug","cacheTimeout","CACHEABLE_TTL","LOGGED_USERNAME","hostname","getTotalStorageUserPrefix","owner","value","secure","protocol","defaultValue","observable","noInit","cachedValue","getFromTotalStorage","newValue","publish","setInTotalStorage","traceback","code","errorResponse","errorMessage","statusText","responseText","errorJs","JSON","parse","message","err","error","prototype","toString","call","logError","document","trigger","getReadyState","readyState","abort","post","successResponseIsError","assistErrorCallback","fail","get","ajax","method","contentType","done","userids","clonedPath","concat","length","shift","replace","offset","dataType","success","pathParts","encodeURI","pageSize","page","filter","bind","extend","storeInCache","timeout","files","always","hideSpinner","GIT_API_PREFIX","fileType","content","collection","name","collectionName","engine","analysis","fieldName","terms","prefix","alwaysCallback","stats","facet","query","qs","q","fqs","notSupportedCallback","suffix","parent","queryMetric","metricName","start","Math","floor","pastMs","end","step","stepMs","combinedDeferred","when","clusterName","timestampIndex","j","arguments","values","i","parseFloat","key","push","sort","a","b","simpleGet","configuration","app","properties","is_default","isDefault","group_id","groupId","user_id","userId","uuid","getQueued","firstInQueue","addToQueue","traditional","text","limit","include_trashed","fetchContents","parent_uuid","parentUuid","xhr","myXhr","ajaxSettings","upload","progressHandler","addEventListener","formData","cache","processData","source_doc_uuid","sourceId","destination_doc_uuid","destinationId","skip_trash","skipTrash","uuids","databaseName","tableName","fields","invalidate","flush_all","cluster","stringify","database","table","isQuery","slice","notebook","snippet","source","notFound","source_type","comment","new_table_name","column","new_column_name","new_column_type","partitions","partition_spec","format","partition_keys_json","partition_values_json","fetchAnalysis","promises","undefined","pop","watch_url","pollForAnalysis","delay","setTimeout","isSuccess","isFailure","cancellablePromises","waitTimeout","clearTimeout","waitForAvailable","notebookJson","snippetJson","query_status","async","operation","sampleResponse","queryResult","rows","meta","full_headers","whenAvailable","resultRequest","sampleCount","startOver","cancel","isView","entity","identity","modifiedCustomMetadata","deletedCustomMetadataKeys","tags","entityId","details","tries","query_id","queryId","onCancel","fix","start_time","query_s","sources","field_facets","facets","raw_query","rawQuery","statements","ApiQueueManager","callQueue","otherCancellables","cancelCallbacks","cancelled","cancelPrevented","state","cancelActiveRequest","cancellable","callback","then","apply","pipe","progress","__webpack_require__","r","__webpack_exports__","localforage__WEBPACK_IMPORTED_MODULE_0__","localforage__WEBPACK_IMPORTED_MODULE_0___default","n","clearCaches","clearInstance","localforage","createInstance","clear","Promise","all","console","log","topics","hOP","hasOwnProperty","topic","listener","index","remove","removeAll","subscribeOnce","ephemeral","info","item","getTopics","pauseAppSubscribers","topicName","split","resumeAppSubscribers","clearAppSubscribers","obj","bootstrapRatios","span3","windowWidth","width","span9","margin","changeURL","newURL","params","extraSearch","newSearchKeys","newKey","IS_EMBEDDED","search","pathname","history","pushState","hashSplit","changeURLParameter","param","parts","RegExp","newSearch","getParameter","p","dfs","node","_typeof","s4","random","substring","getFileBrowseButton","inputElement","selectFolder","valueAccessor","stripHdfsPrefix","allBindingsAccessor","isAddon","isNestedModal","linkMarkup","_btn","addClass","click","handleChoice","filePath","filechooserPrefixSeparator","val","filechooserOptions","deploymentDir","attr","substr","change","displayJustLastBit","_val","preventDefault","HUE_CONTAINER","_initialPath","trim","skipInitialPathIfEmpty","supportSelectFolder","jHueFileChooser","suppressErrors","onFolderChoose","modal","onFileChoose","createFolder","uploadFile","initialPath","errorRedirectPath","forceRefresh","showExtraHome","extraHomeProperties","filterExtensions","filechooserFilter","displayOnlyFolders","isIE11","oldFocus","Constructor","enforceFocus","on","removeClass","callFileChooser","filechooserDisabled","text2Url","selectors","len","_loop","arr","selector","innerHTML","word","matched","re","test","match","htmlEncode","html","html2text","goFullScreen","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","documentElement","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","exitFullScreen","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","replaceURL","replaceState","removeURLParameter","parseHivePseudoJson","pseudoJson","parsedParams","part","isOverflowing","element","scrollHeight","clientHeight","scrollWidth","clientWidth","waitForRendered","condition","$el","waitForRenderTimeout","waitForObservable","subscription","dispose","waitForVariable","variable","scrollbarWidth","$parent","appendTo","$children","children","innerWidth","height","getSearchParameter","returnNull","results","exec","decodeURIComponent","Error","stack","equalIgnoreCase","toLowerCase","deXSS","str","getStyleFromCSSClass","cssClass","styleSheets","cssClasses","rules","cssRules","x","selectorText","style","highlight","searchTerm","startIndex","remText","highLightedText","deleteAllEmptyStringKey","escapeOutput","stripHtmlFromFunctions","template","_tmpl","_mustacheFunctions","each","cnt","fn","tmp","createElement","textContent","innerText"],"mappings":"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","file":"hue~notebook-bundle-c73ead5c4cc870298ae9.js","sourcesContent":["// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  Cloudera, Inc. licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport $ from 'jquery';\n\nimport apiQueueManager from 'api/apiQueueManager';\nimport CancellablePromise from 'api/cancellablePromise';\nimport hueDebug from 'utils/hueDebug';\nimport huePubSub from 'utils/huePubSub';\nimport hueUtils from 'utils/hueUtils';\n\nconst AUTOCOMPLETE_API_PREFIX = '/notebook/api/autocomplete/';\nconst SAMPLE_API_PREFIX = '/notebook/api/sample/';\nconst DOCUMENTS_API = '/desktop/api2/doc/';\nconst DOCUMENTS_SEARCH_API = '/desktop/api2/docs/';\nconst FETCH_CONFIG = '/desktop/api2/get_config/';\nconst HDFS_API_PREFIX = '/filebrowser/view=/';\nconst ADLS_API_PREFIX = '/filebrowser/view=adl:/';\nconst GIT_API_PREFIX = '/desktop/api/vcs/contents/';\nconst S3_API_PREFIX = '/filebrowser/view=S3A://';\nconst IMPALA_INVALIDATE_API = '/impala/api/invalidate';\nconst CONFIG_SAVE_API = '/desktop/api/configurations/save/';\nconst CONFIG_APPS_API = '/desktop/api/configurations';\nconst SOLR_COLLECTIONS_API = '/indexer/api/indexes/list/';\nconst SOLR_FIELDS_API = '/indexer/api/index/list/';\nconst DASHBOARD_TERMS_API = '/dashboard/get_terms';\nconst DASHBOARD_STATS_API = '/dashboard/get_stats';\nconst FORMAT_SQL_API = '/notebook/api/format';\n\nconst SEARCH_API = '/desktop/api/search/entities';\nconst INTERACTIVE_SEARCH_API = '/desktop/api/search/entities_interactive';\n\nconst HBASE_API_PREFIX = '/hbase/api/';\nconst SAVE_TO_FILE = '/filebrowser/save';\n\nconst NAV_URLS = {\n  ADD_TAGS: '/metadata/api/navigator/add_tags',\n  DELETE_TAGS: '/metadata/api/navigator/delete_tags',\n  FIND_ENTITY: '/metadata/api/navigator/find_entity',\n  LIST_TAGS: '/metadata/api/navigator/list_tags',\n  UPDATE_PROPERTIES: '/metadata/api/navigator/update_properties'\n};\n\nconst NAV_OPT_URLS = {\n  TOP_AGGS: '/metadata/api/optimizer/top_aggs',\n  TOP_COLUMNS: '/metadata/api/optimizer/top_columns',\n  TOP_FILTERS: '/metadata/api/optimizer/top_filters',\n  TOP_JOINS: '/metadata/api/optimizer/top_joins',\n  TOP_TABLES: '/metadata/api/optimizer/top_tables',\n  TABLE_DETAILS: '/metadata/api/optimizer/table_details'\n};\n\n/**\n *\n * @param {Object} options\n * @param {string} options.sourceType\n * @param {string} options.url\n * @param {boolean} options.refreshCache\n * @param {string} [options.hash] - Optional hash to use as well as the url\n * @param {Function} options.fetchFunction\n * @param {Function} options.successCallback\n * @param {string} [options.cacheType] - Possible values 'default'|'optimizer'. Default value 'default'\n * @param {Object} [options.editor] - Ace editor\n * @param {Object} [options.promise] - Optional promise that will be resolved if cached data exists\n */\nconst fetchCached = function(options) {\n  const self = this;\n  const cacheIdentifier = self.getAssistCacheIdentifier(options);\n  const cachedData = $.totalStorage(cacheIdentifier) || {};\n  const cachedId = options.hash ? options.url + options.hash : options.url;\n\n  if (\n    options.refreshCache ||\n    typeof cachedData[cachedId] == 'undefined' ||\n    self.hasExpired(cachedData[cachedId].timestamp, options.cacheType || 'default')\n  ) {\n    if (typeof options.editor !== 'undefined' && options.editor !== null) {\n      options.editor.showSpinner();\n    }\n    return options.fetchFunction(data => {\n      cachedData[cachedId] = {\n        timestamp: new Date().getTime(),\n        data: data\n      };\n      try {\n        $.totalStorage(cacheIdentifier, cachedData);\n      } catch (e) {}\n    });\n  } else {\n    if (options.promise) {\n      options.promise.resolve(cachedData[cachedId].data);\n    }\n\n    options.successCallback(cachedData[cachedId].data);\n  }\n};\n\n/**\n * Fetches the popularity for various aspects of the given tables\n *\n * @param {ApiHelper} apiHelper\n * @param {Object} options\n * @param {boolean} [options.silenceErrors]\n * @param {string[][]} options.paths\n * @param {string} url\n * @return {CancellablePromise}\n */\nconst genericNavOptMultiTableFetch = function(apiHelper, options, url) {\n  const deferred = $.Deferred();\n\n  const dbTables = {};\n  options.paths.forEach(path => {\n    dbTables[path.join('.')] = true;\n  });\n  const data = {\n    dbTables: ko.mapping.toJSON(Object.keys(dbTables))\n  };\n\n  const request = apiHelper.simplePost(url, data, {\n    silenceErrors: options.silenceErrors,\n    successCallback: function(data) {\n      data.hueTimestamp = Date.now();\n      deferred.resolve(data);\n    },\n    errorCallback: deferred.reject\n  });\n\n  return new CancellablePromise(deferred, request);\n};\n\n/**\n * Wrapper around the response from the Query API\n *\n * @param {string} sourceType\n * @param {Object} response\n *\n * @constructor\n */\nclass QueryResult {\n  constructor(sourceType, compute, response) {\n    const self = this;\n    self.id = hueUtils.UUID();\n    self.type = response.result.type || sourceType;\n    self.compute = compute;\n    self.status = response.status || 'running';\n    self.result = response.result || {};\n    self.result.type = 'table';\n  }\n}\n\nclass ApiHelper {\n  constructor() {\n    const self = this;\n    self.queueManager = apiQueueManager;\n\n    huePubSub.subscribe('assist.clear.hdfs.cache', () => {\n      $.totalStorage(self.getAssistCacheIdentifier({ sourceType: 'hdfs' }), {});\n    });\n\n    huePubSub.subscribe('assist.clear.adls.cache', () => {\n      $.totalStorage(self.getAssistCacheIdentifier({ sourceType: 'adls' }), {});\n    });\n\n    huePubSub.subscribe('assist.clear.git.cache', () => {\n      $.totalStorage(self.getAssistCacheIdentifier({ sourceType: 'git' }), {});\n    });\n\n    huePubSub.subscribe('assist.clear.s3.cache', () => {\n      $.totalStorage(self.getAssistCacheIdentifier({ sourceType: 's3' }), {});\n    });\n\n    huePubSub.subscribe('assist.clear.collections.cache', () => {\n      $.totalStorage(self.getAssistCacheIdentifier({ sourceType: 'collections' }), {});\n    });\n\n    huePubSub.subscribe('assist.clear.hbase.cache', () => {\n      $.totalStorage(self.getAssistCacheIdentifier({ sourceType: 'hbase' }), {});\n    });\n\n    huePubSub.subscribe('assist.clear.document.cache', () => {\n      $.totalStorage(self.getAssistCacheIdentifier({ sourceType: 'document' }), {});\n    });\n\n    const clearAllCaches = function() {\n      self.clearDbCache({\n        sourceType: 'hive',\n        clearAll: true\n      });\n      self.clearDbCache({\n        sourceType: 'impala',\n        clearAll: true\n      });\n      $.totalStorage(self.getAssistCacheIdentifier({ sourceType: 'hdfs' }), {});\n      $.totalStorage(self.getAssistCacheIdentifier({ sourceType: 'adls' }), {});\n      $.totalStorage(self.getAssistCacheIdentifier({ sourceType: 'git' }), {});\n      $.totalStorage(self.getAssistCacheIdentifier({ sourceType: 's3' }), {});\n      $.totalStorage(self.getAssistCacheIdentifier({ sourceType: 'collections' }), {});\n      $.totalStorage(self.getAssistCacheIdentifier({ sourceType: 'hbase' }), {});\n      $.totalStorage(self.getAssistCacheIdentifier({ sourceType: 'document' }), {});\n    };\n\n    huePubSub.subscribe('assist.clear.all.caches', clearAllCaches);\n\n    if (window.performance && window.performance.navigation) {\n      if (window.performance.navigation.type === 1 && location.href.indexOf('/metastore') !== -1) {\n        // Browser refresh of the metastore page\n        clearAllCaches();\n      }\n    }\n  }\n\n  hasExpired(timestamp, cacheType) {\n    if (typeof hueDebug !== 'undefined' && typeof hueDebug.cacheTimeout !== 'undefined') {\n      return new Date().getTime() - timestamp > hueDebug.cacheTimeout;\n    }\n    return new Date().getTime() - timestamp > CACHEABLE_TTL[cacheType];\n  }\n\n  /**\n   * @param {string} sourceType\n   * @returns {string}\n   */\n  getTotalStorageUserPrefix(sourceType) {\n    return sourceType + '_' + LOGGED_USERNAME + '_' + window.location.hostname;\n  }\n\n  /**\n   * @param {object} options\n   * @param {string} options.sourceType\n   * @param {string} [options.cacheType] - Default value 'default'\n   * @returns {string}\n   */\n  getAssistCacheIdentifier(options) {\n    const self = this;\n    return (\n      'hue.assist.' +\n      (options.cacheType || 'default') +\n      '.' +\n      self.getTotalStorageUserPrefix(options.sourceType)\n    );\n  }\n\n  /**\n   *\n   * @param {string} owner - 'assist', 'viewModelA' etc.\n   * @param {string} id\n   * @param {*} [value] - Optional, undefined and null will remove the value\n   */\n  setInTotalStorage(owner, id, value) {\n    const self = this;\n    try {\n      const cachedData =\n        $.totalStorage('hue.user.settings.' + self.getTotalStorageUserPrefix(owner)) || {};\n      if (typeof value !== 'undefined' && value !== null) {\n        cachedData[id] = value;\n        $.totalStorage('hue.user.settings.' + self.getTotalStorageUserPrefix(owner), cachedData, {\n          secure: window.location.protocol.indexOf('https') > -1\n        });\n      } else if (cachedData[id]) {\n        delete cachedData[id];\n        $.totalStorage('hue.user.settings.' + self.getTotalStorageUserPrefix(owner), cachedData, {\n          secure: window.location.protocol.indexOf('https') > -1\n        });\n      }\n    } catch (e) {}\n  }\n\n  /**\n   *\n   * @param {string} owner - 'assist', 'viewModelA' etc.\n   * @param {string} id\n   * @param {*} [defaultValue]\n   * @returns {*}\n   */\n  getFromTotalStorage(owner, id, defaultValue) {\n    const self = this;\n    const cachedData =\n      $.totalStorage('hue.user.settings.' + self.getTotalStorageUserPrefix(owner)) || {};\n    return typeof cachedData[id] !== 'undefined' ? cachedData[id] : defaultValue;\n  }\n\n  /**\n   * @param {string} owner - 'assist', 'viewModelA' etc.\n   * @param {string} id\n   * @param {Observable} observable\n   * @param {*} [defaultValue] - Optional default value to use if not in total storage initially\n   */\n  withTotalStorage(owner, id, observable, defaultValue, noInit) {\n    const self = this;\n\n    const cachedValue = self.getFromTotalStorage(owner, id, defaultValue);\n\n    if (!noInit && cachedValue !== 'undefined') {\n      observable(cachedValue);\n    }\n\n    observable.subscribe(newValue => {\n      if (owner === 'assist' && id === 'assist_panel_visible') {\n        huePubSub.publish('assist.forceRender');\n      }\n      self.setInTotalStorage(owner, id, newValue);\n    });\n    return observable;\n  }\n\n  /**\n   * @param {Object} [response]\n   * @param {number} [response.status]\n   * @returns {boolean} - True if actually an error\n   */\n  successResponseIsError(response) {\n    return (\n      typeof response !== 'undefined' &&\n      (typeof response.traceback !== 'undefined' ||\n        (typeof response.status !== 'undefined' && response.status !== 0) ||\n        response.code === 503 ||\n        response.code === 500)\n    );\n  }\n\n  /**\n   * @param {Object} options\n   * @param {Function} [options.errorCallback]\n   * @param {boolean} [options.silenceErrors]\n   * @returns {Function}\n   */\n  assistErrorCallback(options) {\n    return function(errorResponse) {\n      let errorMessage = 'Unknown error occurred';\n      if (typeof errorResponse !== 'undefined' && errorResponse !== null) {\n        if (\n          typeof errorResponse.statusText !== 'undefined' &&\n          errorResponse.statusText === 'abort'\n        ) {\n          return;\n        } else if (typeof errorResponse.responseText !== 'undefined') {\n          try {\n            const errorJs = JSON.parse(errorResponse.responseText);\n            if (typeof errorJs.message !== 'undefined') {\n              errorMessage = errorJs.message;\n            } else {\n              errorMessage = errorResponse.responseText;\n            }\n          } catch (err) {\n            errorMessage = errorResponse.responseText;\n          }\n        } else if (typeof errorResponse.message !== 'undefined' && errorResponse.message !== null) {\n          errorMessage = errorResponse.message;\n        } else if (\n          typeof errorResponse.statusText !== 'undefined' &&\n          errorResponse.statusText !== null\n        ) {\n          errorMessage = errorResponse.statusText;\n        } else if (\n          errorResponse.error !== 'undefined' &&\n          Object.prototype.toString.call(errorResponse.error) === '[object String]'\n        ) {\n          errorMessage = errorResponse.error;\n        } else if (Object.prototype.toString.call(errorResponse) === '[object String]') {\n          errorMessage = errorResponse;\n        }\n      }\n\n      if (!options || !options.silenceErrors) {\n        hueUtils.logError(errorResponse);\n        if (errorMessage && errorMessage.indexOf('AuthorizationException') === -1) {\n          $(document).trigger('error', errorMessage);\n        }\n      }\n\n      if (options && options.errorCallback) {\n        options.errorCallback(errorMessage);\n      }\n      return errorMessage;\n    };\n  }\n\n  cancelActiveRequest(request) {\n    if (typeof request !== 'undefined' && request !== null) {\n      const readyState = request.getReadyState ? request.getReadyState() : request.readyState;\n      if (readyState < 4) {\n        request.abort();\n      }\n    }\n  }\n\n  /**\n   * @param {string} url\n   * @param {Object} data\n   * @param {Object} options\n   * @param {function} [options.successCallback]\n   * @param {function} [options.errorCallback]\n   * @param {boolean} [options.silenceErrors]\n   *\n   * @return {Promise}\n   */\n  simplePost(url, data, options) {\n    const self = this;\n    const deferred = $.Deferred();\n\n    const request = $.post(url, data, data => {\n      if (self.successResponseIsError(data)) {\n        deferred.reject(self.assistErrorCallback(options)(data));\n        return;\n      }\n      if (options && options.successCallback) {\n        options.successCallback(data);\n      }\n      deferred.resolve(data);\n    }).fail(self.assistErrorCallback(options));\n\n    request.fail(data => {\n      deferred.reject(self.assistErrorCallback(options)(data));\n    });\n\n    const promise = deferred.promise();\n\n    promise.getReadyState = function() {\n      return request.readyState;\n    };\n\n    promise.abort = function() {\n      request.abort();\n    };\n\n    return promise;\n  }\n\n  /**\n   * @param {Object} data\n   * @param {Object} options\n   * @param {function} [options.successCallback]\n   */\n  saveSnippetToFile(data, options) {\n    const self = this;\n    $.post(\n      SAVE_TO_FILE,\n      data,\n      result => {\n        if (typeof options.successCallback !== 'undefined') {\n          options.successCallback(result);\n        }\n      },\n      'json'\n    ).fail(self.assistErrorCallback(options));\n  }\n\n  /**\n   * @param {string} url\n   * @param {Object} data\n   * @param {Object} options\n   * @param {function} [options.successCallback]\n   * @param {function} [options.errorCallback]\n   * @param {boolean} [options.silenceErrors]\n   */\n  simpleGet(url, data, options) {\n    const self = this;\n    if (!options) {\n      options = {};\n    }\n    return $.get(url, data, data => {\n      if (self.successResponseIsError(data)) {\n        self.assistErrorCallback(options)(data);\n      } else if (typeof options.successCallback !== 'undefined') {\n        options.successCallback(data);\n      }\n    }).fail(self.assistErrorCallback(options));\n  }\n\n  fetchUsersAndGroups(options) {\n    $.ajax({\n      method: 'GET',\n      url: '/desktop/api/users/autocomplete',\n      data: options.data || {},\n      contentType: 'application/json'\n    })\n      .done(response => {\n        options.successCallback(response);\n      })\n      .fail(response => {\n        options.errorCallback(response);\n      });\n  }\n\n  fetchUsersByIds(options) {\n    $.ajax({\n      method: 'GET',\n      url: '/desktop/api/users',\n      data: { userids: options.userids },\n      contentType: 'application/json'\n    })\n      .done(response => {\n        options.successCallback(response);\n      })\n      .fail(response => {\n        options.errorCallback(response);\n      });\n  }\n\n  /**\n   *\n   * @param {Object} options\n   * @param {string[]} options.path\n   * @param {string} options.type - 's3', 'adls' or 'hdfs'\n   * @param {number} [options.offset]\n   * @param {number} [options.length]\n   * @param {boolean} [options.silenceErrors]\n   */\n  fetchStoragePreview(options) {\n    const self = this;\n    let url;\n    if (options.type === 's3') {\n      url = S3_API_PREFIX;\n    } else if (options.type === 'adls') {\n      url = ADLS_API_PREFIX;\n    } else {\n      url = HDFS_API_PREFIX;\n    }\n\n    const clonedPath = options.path.concat();\n    if (clonedPath.length && clonedPath[0] === '/') {\n      clonedPath.shift();\n    }\n    url += clonedPath.join('/').replace(/#/g, '%23') + '?compression=none&mode=text';\n    url += '&offset=' + (options.offset || 0);\n    url += '&length=' + (options.length || 118784);\n\n    const deferred = $.Deferred();\n    $.ajax({\n      dataType: 'json',\n      url: url,\n      success: function(data) {\n        if (self.successResponseIsError(data)) {\n          deferred.reject(self.assistErrorCallback(options)(data));\n        } else {\n          deferred.resolve(data);\n        }\n      },\n      fail: deferred.reject\n    });\n\n    return deferred.promise();\n  }\n\n  /**\n   * @param {Object} options\n   * @param {Function} options.successCallback\n   * @param {Function} [options.errorCallback]\n   * @param {boolean} [options.silenceErrors]\n   * @param {Number} [options.timeout]\n   * @param {Object} [options.editor] - Ace editor\n   *\n   * @param {string[]} options.pathParts\n   * @param {number} [options.pageSize] - Default 500\n   * @param {number} [options.page] - Default 1\n   * @param {string} [options.filter]\n   */\n  fetchHdfsPath(options) {\n    const self = this;\n    if (\n      options.pathParts.length > 0 &&\n      (options.pathParts[0] === '/' || options.pathParts[0] === '')\n    ) {\n      options.pathParts.shift();\n    }\n    let url =\n      HDFS_API_PREFIX +\n      encodeURI(options.pathParts.join('/')) +\n      '?format=json&sortby=name&descending=false&pagesize=' +\n      (options.pageSize || 500) +\n      '&pagenum=' +\n      (options.page || 1);\n    if (options.filter) {\n      url += '&filter=' + options.filter;\n    }\n    const fetchFunction = function(storeInCache) {\n      if (options.timeout === 0) {\n        self.assistErrorCallback(options)({ status: -1 });\n        return;\n      }\n      return $.ajax({\n        dataType: 'json',\n        url: url,\n        timeout: options.timeout,\n        success: function(data) {\n          if (\n            !data.error &&\n            !self.successResponseIsError(data) &&\n            typeof data.files !== 'undefined' &&\n            data.files !== null\n          ) {\n            if (data.files.length > 2 && !options.filter) {\n              storeInCache(data);\n            }\n            options.successCallback(data);\n          } else {\n            self.assistErrorCallback(options)(data);\n          }\n        }\n      })\n        .fail(self.assistErrorCallback(options))\n        .always(() => {\n          if (typeof options.editor !== 'undefined' && options.editor !== null) {\n            options.editor.hideSpinner();\n          }\n        });\n    };\n\n    return fetchCached.bind(self)(\n      $.extend({}, options, {\n        sourceType: 'hdfs',\n        url: url,\n        fetchFunction: fetchFunction\n      })\n    );\n  }\n\n  /**\n   * @param {Object} options\n   * @param {Function} options.successCallback\n   * @param {Function} [options.errorCallback]\n   * @param {boolean} [options.silenceErrors]\n   * @param {Number} [options.timeout]\n   * @param {Object} [options.editor] - Ace editor\n   *\n   * @param {string[]} options.pathParts\n   * @param {number} [options.pageSize] - Default 500\n   * @param {number} [options.page] - Default 1\n   * @param {string} [options.filter]\n   */\n  fetchAdlsPath(options) {\n    const self = this;\n    options.pathParts.shift();\n    let url =\n      ADLS_API_PREFIX +\n      encodeURI(options.pathParts.join('/')) +\n      '?format=json&sortby=name&descending=false&pagesize=' +\n      (options.pageSize || 500) +\n      '&pagenum=' +\n      (options.page || 1);\n    if (options.filter) {\n      url += '&filter=' + options.filter;\n    }\n    const fetchFunction = function(storeInCache) {\n      if (options.timeout === 0) {\n        self.assistErrorCallback(options)({ status: -1 });\n        return;\n      }\n      return $.ajax({\n        dataType: 'json',\n        url: url,\n        timeout: options.timeout,\n        success: function(data) {\n          if (\n            !data.error &&\n            !self.successResponseIsError(data) &&\n            typeof data.files !== 'undefined' &&\n            data.files !== null\n          ) {\n            if (data.files.length > 2 && !options.filter) {\n              storeInCache(data);\n            }\n            options.successCallback(data);\n          } else {\n            self.assistErrorCallback(options)(data);\n          }\n        }\n      })\n        .fail(self.assistErrorCallback(options))\n        .always(() => {\n          if (typeof options.editor !== 'undefined' && options.editor !== null) {\n            options.editor.hideSpinner();\n          }\n        });\n    };\n\n    return fetchCached.bind(self)(\n      $.extend({}, options, {\n        sourceType: 'adls',\n        url: url,\n        fetchFunction: fetchFunction\n      })\n    );\n  }\n\n  /**\n   * @param {Object} options\n   * @param {Function} options.successCallback\n   * @param {Function} [options.errorCallback]\n   * @param {boolean} [options.silenceErrors]\n   * @param {Number} [options.timeout]\n   *\n   * @param {string[]} options.pathParts\n   * @param {string} options.fileType\n   */\n  fetchGitContents(options) {\n    const self = this;\n    const url =\n      GIT_API_PREFIX +\n      '?path=' +\n      encodeURI(options.pathParts.join('/')) +\n      '&fileType=' +\n      options.fileType;\n    const fetchFunction = function(storeInCache) {\n      if (options.timeout === 0) {\n        self.assistErrorCallback(options)({ status: -1 });\n        return;\n      }\n      $.ajax({\n        dataType: 'json',\n        url: url,\n        timeout: options.timeout,\n        success: function(data) {\n          if (!data.error && !self.successResponseIsError(data)) {\n            if (\n              data.fileType === 'dir' &&\n              typeof data.files !== 'undefined' &&\n              data.files !== null\n            ) {\n              if (data.files.length > 2) {\n                storeInCache(data);\n              }\n              options.successCallback(data);\n            } else if (\n              data.fileType === 'file' &&\n              typeof data.content !== 'undefined' &&\n              data.content !== null\n            ) {\n              options.successCallback(data);\n            }\n          } else {\n            self.assistErrorCallback(options)(data);\n          }\n        }\n      }).fail(self.assistErrorCallback(options));\n    };\n\n    fetchCached.bind(self)(\n      $.extend({}, options, {\n        sourceType: 'git',\n        url: url,\n        fetchFunction: fetchFunction\n      })\n    );\n  }\n\n  /**\n   * @param {Object} options\n   * @param {Function} options.successCallback\n   * @param {Function} [options.errorCallback]\n   * @param {boolean} [options.silenceErrors]\n   * @param {Number} [options.timeout]\n   * @param {Object} [options.editor] - Ace editor\n   *\n   * @param {string[]} options.pathParts\n   * @param {number} [options.pageSize] - Default 500\n   * @param {number} [options.page] - Default 1\n   * @param {string} [options.filter]\n   */\n  fetchS3Path(options) {\n    const self = this;\n    options.pathParts.shift(); // remove the trailing /\n    let url =\n      S3_API_PREFIX +\n      encodeURI(options.pathParts.join('/')) +\n      '?format=json&sortby=name&descending=false&pagesize=' +\n      (options.pageSize || 500) +\n      '&pagenum=' +\n      (options.page || 1);\n    if (options.filter) {\n      url += '&filter=' + options.filter;\n    }\n    const fetchFunction = function(storeInCache) {\n      if (options.timeout === 0) {\n        self.assistErrorCallback(options)({ status: -1 });\n        return;\n      }\n\n      $.ajax({\n        dataType: 'json',\n        url: url,\n        timeout: options.timeout,\n        success: function(data) {\n          if (\n            !data.error &&\n            !self.successResponseIsError(data) &&\n            typeof data.files !== 'undefined' &&\n            data.files !== null\n          ) {\n            if (data.files.length > 2 && !options.filter) {\n              storeInCache(data);\n            }\n            options.successCallback(data);\n          } else {\n            self.assistErrorCallback(options)(data);\n          }\n        }\n      })\n        .fail(self.assistErrorCallback(options))\n        .always(() => {\n          if (typeof options.editor !== 'undefined' && options.editor !== null) {\n            options.editor.hideSpinner();\n          }\n        });\n    };\n\n    fetchCached.bind(self)(\n      $.extend({}, options, {\n        sourceType: 's3',\n        url: url,\n        fetchFunction: fetchFunction\n      })\n    );\n  }\n\n  /**\n   * @param {Object} options\n   * @param {String} options.collectionName\n   * @param {String} options.fieldName\n   * @param {String} options.prefix\n   * @param {String} [options.engine]\n   * @param {Function} options.successCallback\n   * @param {Function} [options.alwaysCallback]\n   * @param {Number} [options.timeout]\n   *\n   */\n  fetchDashboardTerms(options) {\n    const self = this;\n    if (options.timeout === 0) {\n      self.assistErrorCallback(options)({ status: -1 });\n      return;\n    }\n    $.ajax({\n      dataType: 'json',\n      url: DASHBOARD_TERMS_API,\n      type: 'POST',\n      data: {\n        collection: ko.mapping.toJSON({\n          id: '',\n          name: options.collectionName,\n          engine: options.engine || 'solr'\n        }),\n        analysis: ko.mapping.toJSON({\n          name: options.fieldName,\n          terms: {\n            prefix: options.prefix || ''\n          }\n        })\n      },\n      timeout: options.timeout,\n      success: function(data) {\n        if (!data.error && !self.successResponseIsError(data) && data.status === 0) {\n          options.successCallback(data);\n        } else {\n          self.assistErrorCallback(options)(data);\n        }\n      }\n    })\n      .fail(self.assistErrorCallback(options))\n      .always(options.alwaysCallback);\n  }\n\n  /**\n   * @param {Object} options\n   * @param {String} options.collectionName\n   * @param {String} options.fieldName\n   * @param {String} [options.engine]\n   * @param {Function} options.successCallback\n   * @param {Function} [options.alwaysCallback]\n   * @param {Number} [options.timeout]\n   *\n   */\n  fetchDashboardStats(options) {\n    const self = this;\n    if (options.timeout === 0) {\n      self.assistErrorCallback(options)({ status: -1 });\n      return;\n    }\n    $.ajax({\n      dataType: 'json',\n      url: DASHBOARD_STATS_API,\n      type: 'POST',\n      data: {\n        collection: ko.mapping.toJSON({\n          id: '',\n          name: options.collectionName,\n          engine: options.engine || 'solr'\n        }),\n        analysis: ko.mapping.toJSON({\n          name: options.fieldName,\n          stats: {\n            facet: ''\n          }\n        }),\n        query: ko.mapping.toJSON({\n          qs: [{ q: '' }],\n          fqs: []\n        })\n      },\n      timeout: options.timeout,\n      success: function(data) {\n        if (!data.error && !self.successResponseIsError(data) && data.status === 0) {\n          options.successCallback(data);\n        } else if (data.status === 1) {\n          options.notSupportedCallback(data);\n        } else {\n          self.assistErrorCallback(options)(data);\n        }\n      }\n    })\n      .fail(self.assistErrorCallback(options))\n      .always(options.alwaysCallback);\n  }\n\n  /**\n   * @param {Object} options\n   * @param {Function} options.successCallback\n   * @param {Function} [options.errorCallback]\n   * @param {boolean} [options.silenceErrors]\n   * @param {Number} [options.timeout]\n   * @param {Object} [options.editor] - Ace editor\n   */\n  fetchHBase(options) {\n    const self = this;\n    let suffix = 'getClusters';\n    if (options.parent.name !== '') {\n      suffix = 'getTableList/' + options.parent.name;\n    }\n    const url = HBASE_API_PREFIX + suffix;\n    const fetchFunction = function(storeInCache) {\n      if (options.timeout === 0) {\n        self.assistErrorCallback(options)({ status: -1 });\n        return;\n      }\n      $.ajax({\n        dataType: 'json',\n        url: url,\n        timeout: options.timeout,\n        success: function(data) {\n          if (!data.error && !self.successResponseIsError(data)) {\n            storeInCache(data);\n            options.successCallback(data);\n          } else {\n            self.assistErrorCallback(options)(data);\n          }\n        }\n      })\n        .fail(self.assistErrorCallback(options))\n        .always(() => {\n          if (typeof options.editor !== 'undefined' && options.editor !== null) {\n            options.editor.hideSpinner();\n          }\n        });\n    };\n\n    fetchCached.bind(self)(\n      $.extend({}, options, {\n        sourceType: 'hbase',\n        url: url,\n        fetchFunction: fetchFunction\n      })\n    );\n  }\n\n  /**\n   * @param {Object} options\n   * @param {Number} options.pastMs\n   * @param {Number} options.stepMs\n   *\n   * @return {Promise}\n   */\n  fetchResourceStats(options) {\n    const self = this;\n\n    const queryMetric = function(metricName) {\n      const now = Date.now();\n      return self.simplePost('/metadata/api/prometheus/query', {\n        query: ko.mapping.toJSON(metricName),\n        start: Math.floor((now - options.pastMs) / 1000),\n        end: Math.floor(now / 1000),\n        step: options.stepMs / 1000\n      });\n    };\n\n    const combinedDeferred = $.Deferred();\n    $.when(\n      queryMetric('round((go_memstats_alloc_bytes / go_memstats_sys_bytes) * 100)'), // CPU percentage\n      queryMetric('round((go_memstats_alloc_bytes / go_memstats_sys_bytes) * 100)'), // Memory percentage\n      queryMetric('round((go_memstats_alloc_bytes / go_memstats_sys_bytes) * 100)'), // IO percentage\n      queryMetric('impala_queries_count{datawarehouse=\"' + options.clusterName + '\"}'), // Sum of all queries in flight (currently total query executed for testing purpose)\n      queryMetric('impala_queries{datawarehouse=\"' + options.clusterName + '\"}') // Queued queries\n    )\n      .done(function() {\n        const timestampIndex = {};\n        for (let j = 0; j < arguments.length; j++) {\n          const response = arguments[j];\n          if (response.data.result[0]) {\n            const values = response.data.result[0].values;\n            for (let i = 0; i < values.length; i++) {\n              if (!timestampIndex[values[i][0]]) {\n                timestampIndex[values[i][0]] = [values[i][0] * 1000, 0, 0, 0, 0, 0]; // Adjust back to milliseconds\n              }\n              timestampIndex[values[i][0]][j + 1] = parseFloat(values[i][1]);\n            }\n          }\n        }\n        const result = [];\n        Object.keys(timestampIndex).forEach(key => {\n          result.push(timestampIndex[key]);\n        });\n        result.sort((a, b) => {\n          return a[0] - b[0];\n        });\n        combinedDeferred.resolve(result);\n      })\n      .fail(combinedDeferred.reject);\n\n    return combinedDeferred.promise();\n  }\n\n  /**\n   * @param {Object} options\n   * @param {Function} [options.successCallback]\n   * @param {Function} [options.errorCallback]\n   * @param {boolean} [options.silenceErrors]\n   */\n  fetchConfigurations(options) {\n    const self = this;\n    self.simpleGet(CONFIG_APPS_API, {}, options);\n  }\n\n  saveGlobalConfiguration(options) {\n    const self = this;\n    self.simplePost(\n      CONFIG_APPS_API,\n      {\n        configuration: ko.mapping.toJSON(options.configuration)\n      },\n      options\n    );\n  }\n\n  /**\n   * @param {Object} options\n   * @param {Function} [options.successCallback]\n   * @param {Function} [options.errorCallback]\n   * @param {boolean} [options.silenceErrors]\n   *\n   * @param {string} options.app\n   * @param {Object} options.properties\n   * @param {boolean} [options.isDefault]\n   * @param {Number} [options.groupId]\n   * @param {Number} [options.userId]\n   */\n  saveConfiguration(options) {\n    const self = this;\n    self.simplePost(\n      CONFIG_SAVE_API,\n      {\n        app: options.app,\n        properties: ko.mapping.toJSON(options.properties),\n        is_default: options.isDefault,\n        group_id: options.groupId,\n        user_id: options.userId\n      },\n      options\n    );\n  }\n\n  /**\n   * @param {Object} options\n   * @param {Function} options.successCallback\n   * @param {Function} [options.errorCallback]\n   * @param {boolean} [options.silenceErrors]\n   *\n   * @param {string} [options.uuid]\n   */\n  fetchDocuments(options) {\n    const self = this;\n\n    let id = '';\n    if (options.uuid) {\n      id += options.uuid;\n    }\n    if (options.type && options.type !== 'all') {\n      id += options.type;\n    }\n\n    let promise = self.queueManager.getQueued(DOCUMENTS_API, id);\n    const firstInQueue = typeof promise === 'undefined';\n    if (firstInQueue) {\n      promise = $.Deferred();\n      self.queueManager.addToQueue(promise, DOCUMENTS_API, id);\n    }\n\n    promise.done(options.successCallback).fail(self.assistErrorCallback(options));\n\n    if (!firstInQueue) {\n      return;\n    }\n\n    const data = {\n      uuid: options.uuid\n    };\n\n    if (options.type && options.type !== 'all') {\n      data.type = ['directory', options.type];\n    }\n\n    $.ajax({\n      url: DOCUMENTS_API,\n      data: data,\n      traditional: true,\n      success: function(data) {\n        if (!self.successResponseIsError(data)) {\n          promise.resolve(data);\n        } else {\n          promise.reject(data);\n        }\n      }\n    }).fail(promise.reject);\n  }\n\n  /**\n   * @param {Object} options\n   * @param {Function} options.successCallback\n   * @param {Function} [options.errorCallback]\n   * @param {boolean} [options.silenceErrors]\n   *\n   * @param {string} [options.path]\n   * @param {string} [options.query]\n   * @param {string} [options.type]\n   * @param {int} [options.page]\n   * @param {int} [options.limit]\n   */\n  searchDocuments(options) {\n    const self = this;\n    return $.ajax({\n      url: DOCUMENTS_SEARCH_API,\n      data: {\n        uuid: options.uuid,\n        text: options.query,\n        type: options.type,\n        page: options.page,\n        limit: options.limit,\n        include_trashed: options.include_trashed\n      },\n      success: function(data) {\n        if (!self.successResponseIsError(data)) {\n          options.successCallback(data);\n        } else {\n          self.assistErrorCallback(options)(data);\n        }\n      }\n    }).fail(self.assistErrorCallback(options));\n  }\n\n  /**\n   * @param {Object} options\n   * @param {number} options.uuid\n   * @param {boolean} [options.silenceErrors]\n   * @param {boolean} [options.fetchContents]\n   *\n   * @return {CancellablePromise}\n   */\n  fetchDocument(options) {\n    const self = this;\n    const deferred = $.Deferred();\n    const request = $.ajax({\n      url: DOCUMENTS_API,\n      data: {\n        uuid: options.uuid,\n        data: !!options.fetchContents\n      },\n      success: function(data) {\n        if (!self.successResponseIsError(data)) {\n          deferred.resolve(data);\n        } else {\n          deferred.reject(\n            self.assistErrorCallback({\n              silenceErrors: options.silenceErrors\n            })\n          );\n        }\n      }\n    }).fail(\n      self.assistErrorCallback({\n        silenceErrors: options.silenceErrors,\n        errorCallback: deferred.reject\n      })\n    );\n    return new CancellablePromise(deferred, request);\n  }\n\n  /**\n   * @param {Object} options\n   * @param {Function} options.successCallback\n   * @param {Function} [options.errorCallback]\n   * @param {boolean} [options.silenceErrors]\n   *\n   * @param {string} options.parentUuid\n   * @param {string} options.name\n   */\n  createDocumentsFolder(options) {\n    const self = this;\n    self.simplePost(\n      DOCUMENTS_API + 'mkdir',\n      {\n        parent_uuid: ko.mapping.toJSON(options.parentUuid),\n        name: ko.mapping.toJSON(options.name)\n      },\n      options\n    );\n  }\n\n  /**\n   * @param {Object} options\n   * @param {Function} options.successCallback\n   * @param {Function} [options.errorCallback]\n   * @param {boolean} [options.silenceErrors]\n   *\n   * @param {string} options.uuid\n   * @param {string} options.name\n   */\n  updateDocument(options) {\n    const self = this;\n    self.simplePost(\n      DOCUMENTS_API + 'update',\n      {\n        uuid: ko.mapping.toJSON(options.uuid),\n        name: options.name\n      },\n      options\n    );\n  }\n\n  /**\n   * @param {Object} options\n   * @param {Function} options.successCallback\n   * @param {Function} [options.errorCallback]\n   * @param {Function} [options.progressHandler]\n   * @param {boolean} [options.silenceErrors]\n   *\n   * @param {FormData} options.formData\n   */\n  uploadDocument(options) {\n    const self = this;\n    $.ajax({\n      url: DOCUMENTS_API + 'import',\n      type: 'POST',\n      success: function(data) {\n        if (!self.successResponseIsError(data)) {\n          options.successCallback(data);\n        } else {\n          self.assistErrorCallback(options)(data);\n        }\n      },\n      xhr: function() {\n        const myXhr = $.ajaxSettings.xhr();\n        if (myXhr.upload && options.progressHandler) {\n          myXhr.upload.addEventListener('progress', options.progressHandler, false);\n        }\n        return myXhr;\n      },\n      dataType: 'json',\n      data: options.formData,\n      cache: false,\n      contentType: false,\n      processData: false\n    }).fail(self.assistErrorCallback(options));\n  }\n\n  /**\n   *\n   * @param {Function} options.successCallback\n   * @param {Function} [options.errorCallback]\n   * @param {boolean} [options.silenceErrors]\n   *\n   * @param {number} options.sourceId - The ID of the source document\n   * @param {number} options.destinationId - The ID of the target document\n   */\n  moveDocument(options) {\n    const self = this;\n    self.simplePost(\n      DOCUMENTS_API + 'move',\n      {\n        source_doc_uuid: ko.mapping.toJSON(options.sourceId),\n        destination_doc_uuid: ko.mapping.toJSON(options.destinationId)\n      },\n      options\n    );\n  }\n\n  /**\n   * @param {Object} options\n   * @param {Function} options.successCallback\n   * @param {Function} [options.errorCallback]\n   * @param {boolean} [options.silenceErrors]\n   *\n   * @param {string} options.uuid\n   * @param {string} [options.skipTrash] - Default false\n   */\n  deleteDocument(options) {\n    const self = this;\n    self.simplePost(\n      DOCUMENTS_API + 'delete',\n      {\n        uuid: ko.mapping.toJSON(options.uuid),\n        skip_trash: ko.mapping.toJSON(options.skipTrash || false)\n      },\n      options\n    );\n  }\n\n  /**\n   * @param {Object} options\n   * @param {Function} options.successCallback\n   * @param {Function} [options.errorCallback]\n   * @param {boolean} [options.silenceErrors]\n   *\n   * @param {string} options.uuid\n   */\n  copyDocument(options) {\n    const self = this;\n    self.simplePost(\n      DOCUMENTS_API + 'copy',\n      {\n        uuid: ko.mapping.toJSON(options.uuid)\n      },\n      options\n    );\n  }\n\n  /**\n   * @param {Object} options\n   * @param {Function} options.successCallback\n   * @param {Function} [options.errorCallback]\n   * @param {boolean} [options.silenceErrors]\n   *\n   * @param {string} options.uuid\n   */\n  restoreDocument(options) {\n    const self = this;\n    self.simplePost(\n      DOCUMENTS_API + 'restore',\n      {\n        uuids: ko.mapping.toJSON(options.uuids)\n      },\n      options\n    );\n  }\n\n  /**\n   *\n   * @param {Object} options\n   * @param {string} options.sourceType\n   * @param {string} [options.databaseName]\n   * @param {string} [options.tableName]\n   * @param {string} [options.cacheType] - Possible values 'default', 'optimizer. Default value 'default'\n   * @param {string[]} [options.fields]\n   * @param {boolean} [options.clearAll]\n   */\n  clearDbCache(options) {\n    const self = this;\n    const cacheIdentifier = self.getAssistCacheIdentifier(options);\n    if (options.clearAll) {\n      $.totalStorage(cacheIdentifier, {});\n    } else {\n      let url = AUTOCOMPLETE_API_PREFIX;\n      if (options.databaseName) {\n        url += options.databaseName;\n      }\n      if (options.tableName) {\n        url += '/' + options.tableName;\n      }\n      if (options.fields) {\n        url += options.fields.length > 0 ? '/' + options.fields.join('/') : '';\n      }\n      const cachedData = $.totalStorage(cacheIdentifier) || {};\n      delete cachedData[url];\n      $.totalStorage(cacheIdentifier, cachedData);\n    }\n  }\n\n  /**\n   * @param {Object} options\n   * @param {string} options.sourceType\n   * @param {string} options.invalidate - 'invalidate' or 'invalidateAndFlush'\n   * @param {string[]} [options.path]\n   * @param {ContextCompute} [options.compute]\n   * @param {boolean} [options.silenceErrors]\n   */\n  invalidateSourceMetadata(options) {\n    const self = this;\n    const deferred = $.Deferred();\n\n    if (\n      options.sourceType === 'impala' &&\n      (options.invalidate === 'invalidate' || options.invalidate === 'invalidateAndFlush')\n    ) {\n      const data = {\n        flush_all: options.invalidate === 'invalidateAndFlush',\n        cluster: JSON.stringify(options.compute)\n      };\n\n      if (options.path && options.path.length > 0) {\n        data.database = options.path[0];\n      }\n      if (options.path && options.path.length > 1) {\n        data.table = options.path[1];\n      }\n\n      const request = self\n        .simplePost(IMPALA_INVALIDATE_API, data, options)\n        .done(deferred.resolve)\n        .fail(deferred.reject);\n\n      return new CancellablePromise(deferred, request);\n    }\n\n    return deferred.resolve().promise();\n  }\n\n  /**\n   * @param {Object} options\n   * @param {string} options.sourceType\n   * @param {ContextCompute} options.compute\n   * @param {boolean} [options.silenceErrors]\n   * @param {number} [options.timeout]\n   *\n   * @param {string[]} [options.path] - The path to fetch\n   *\n   * @return {CancellablePromise}\n   */\n  fetchSourceMetadata(options) {\n    const self = this;\n    const deferred = $.Deferred();\n\n    const isQuery = options.sourceType.indexOf('-query') !== -1;\n    const sourceType = isQuery ? options.sourceType.replace('-query', '') : options.sourceType;\n\n    const request = $.ajax({\n      type: 'POST',\n      url: AUTOCOMPLETE_API_PREFIX + (isQuery ? options.path.slice(1) : options.path).join('/'),\n      data: {\n        notebook: {},\n        snippet: ko.mapping.toJSON({\n          type: sourceType,\n          source: isQuery ? 'query' : 'data'\n        }),\n        cluster: ko.mapping.toJSON(options.compute ? options.compute : '\"\"')\n      },\n      timeout: options.timeout\n    })\n      .done(data => {\n        data.notFound =\n          data.status === 0 &&\n          data.code === 500 &&\n          data.error &&\n          (data.error.indexOf('Error 10001') !== -1 ||\n            data.error.indexOf('AnalysisException') !== -1);\n        data.hueTimestamp = Date.now();\n\n        // TODO: Display warning in autocomplete when an entity can't be found\n        // Hive example: data.error: [...] SemanticException [Error 10001]: Table not found default.foo\n        // Impala example: data.error: [...] AnalysisException: Could not resolve path: 'default.foo'\n        if (!data.notFound && self.successResponseIsError(data)) {\n          self.assistErrorCallback({\n            silenceErrors: options.silenceErrors,\n            errorCallback: deferred.reject\n          })(data);\n        } else {\n          deferred.resolve(data);\n        }\n      })\n      .fail(\n        self.assistErrorCallback({\n          silenceErrors: options.silenceErrors,\n          errorCallback: deferred.reject\n        })\n      );\n\n    return new CancellablePromise(deferred, request);\n  }\n\n  updateSourceMetadata(options) {\n    const self = this;\n    let url;\n    const data = {\n      source_type: options.sourceType\n    };\n    if (options.path.length === 1) {\n      url = '/metastore/databases/' + options.path[1] + '/alter';\n      data.properties = ko.mapping.toJSON(options.properties);\n    } else if (options.path.length === 2) {\n      url = '/metastore/table/' + options.path[0] + '/' + options.path[1] + '/alter';\n      if (options.properties) {\n        if (options.properties.comment) {\n          data.comment = options.properties.comment;\n        }\n        if (options.properties.name) {\n          data.new_table_name = options.properties.name;\n        }\n      }\n    } else if (options.path > 2) {\n      url = '/metastore/table/' + options.path[0] + '/' + options.path[1] + '/alter_column';\n      data.column = options.path.slice(2).join('.');\n      if (options.properties) {\n        if (options.properties.comment) {\n          data.comment = options.properties.comment;\n        }\n        if (options.properties.name) {\n          data.new_column_name = options.properties.name;\n        }\n        if (options.properties.type) {\n          data.new_column_type = options.properties.name;\n        }\n        if (options.properties.partitions) {\n          data.partition_spec = ko.mapping.toJSON(options.properties.partitions);\n        }\n      }\n    }\n    return self.simplePost(url, data, options);\n  }\n\n  /**\n   * Fetches the analysis for the given source and path\n   *\n   * @param {Object} options\n   * @param {boolean} [options.silenceErrors]\n   *\n   * @param {ContextCompute} options.compute\n   * @param {string} options.sourceType\n   * @param {string[]} options.path\n   *\n   * @return {CancellablePromise}\n   */\n  fetchAnalysis(options) {\n    const self = this;\n    const deferred = $.Deferred();\n\n    let url;\n\n    if (options.path.length === 1) {\n      url = '/metastore/databases/' + options.path[0] + '/metadata';\n    } else {\n      url =\n        '/' +\n        (options.sourceType === 'hive' ? 'beeswax' : options.sourceType) +\n        '/api/table/' +\n        options.path[0];\n\n      if (options.path.length > 1) {\n        url += '/' + options.path[1] + '/';\n      }\n\n      if (options.path.length > 2) {\n        url += 'stats/' + options.path.slice(2).join('/');\n      }\n    }\n\n    const data = {\n      format: 'json',\n      cluster: JSON.stringify(options.compute),\n      source_type: options.sourceType\n    };\n\n    const request = self[options.path.length < 3 ? 'simplePost' : 'simpleGet'](url, data, {\n      silenceErrors: options.silenceErrors,\n      successCallback: function(response) {\n        if (options.path.length === 1) {\n          if (response.data) {\n            response.data.hueTimestamp = Date.now();\n            deferred.resolve(response.data);\n          } else {\n            deferred.reject();\n          }\n        } else {\n          deferred.resolve(response);\n        }\n      },\n      errorCallback: deferred.reject\n    });\n\n    return new CancellablePromise(deferred, request);\n  }\n\n  /**\n   * Fetches the partitions for the given path\n   *\n   * @param {Object} options\n   * @param {boolean} [options.silenceErrors]\n   *\n   * @param {string[]} options.path\n   * @param {ContextCompute} options.compute\n   *\n   * @return {CancellablePromise}\n   */\n  fetchPartitions(options) {\n    const self = this;\n    const deferred = $.Deferred();\n\n    // TODO: No sourceType needed?\n    const request = $.post('/metastore/table/' + options.path.join('/') + '/partitions', {\n      format: 'json',\n      cluster: JSON.stringify(options.compute)\n    })\n      .done(response => {\n        if (!self.successResponseIsError(response)) {\n          if (!response) {\n            response = {};\n          }\n          response.hueTimestamp = Date.now();\n          deferred.resolve(response);\n        } else {\n          self.assistErrorCallback({\n            silenceErrors: options.silenceErrors,\n            errorCallback: deferred.reject\n          })(response);\n        }\n      })\n      .fail(response => {\n        // Don't report any partitions if it's not partitioned instead of error to prevent unnecessary calls\n        if (\n          response &&\n          response.responseText &&\n          response.responseText.indexOf('is not partitioned') !== -1\n        ) {\n          deferred.resolve({\n            hueTimestamp: Date.now(),\n            partition_keys_json: [],\n            partition_values_json: []\n          });\n        } else {\n          self.assistErrorCallback({\n            silenceErrors: options.silenceErrors,\n            errorCallback: deferred.reject\n          })(response);\n        }\n      });\n\n    return new CancellablePromise(deferred, request);\n  }\n\n  /**\n   * Refreshes the analysis for the given source and path\n   *\n   * @param {Object} options\n   * @param {boolean} [options.silenceErrors]\n   *\n   * @param {string} options.sourceType\n   * @param {ContextCompute} options.compute\n   * @param {string[]} options.path\n   *\n   * @return {CancellablePromise}\n   */\n  refreshAnalysis(options) {\n    const self = this;\n\n    if (options.path.length === 1) {\n      return self.fetchAnalysis(options);\n    }\n    const deferred = $.Deferred();\n\n    const promises = [];\n\n    const pollForAnalysis = (url, delay) => {\n      window.setTimeout(() => {\n        promises.push(\n          self.simplePost(url, undefined, {\n            silenceErrors: options.silenceErrors,\n            successCallback: function(data) {\n              promises.pop();\n              if (data.isSuccess) {\n                promises.push(\n                  self\n                    .fetchAnalysis(options)\n                    .done(deferred.resolve)\n                    .fail(deferred.reject)\n                );\n              } else if (data.isFailure) {\n                deferred.reject(data);\n              } else {\n                pollForAnalysis(url, 1000);\n              }\n            },\n            errorCallback: deferred.reject\n          })\n        );\n      }, delay);\n    };\n\n    const url =\n      '/' +\n      (options.sourceType === 'hive' ? 'beeswax' : options.sourceType) +\n      '/api/analyze/' +\n      options.path.join('/') +\n      '/';\n\n    promises.push(\n      self.simplePost(url, undefined, {\n        silenceErrors: options.silenceErrors,\n        successCallback: function(data) {\n          promises.pop();\n          if (data.status === 0 && data.watch_url) {\n            pollForAnalysis(data.watch_url, 500);\n          } else {\n            deferred.reject();\n          }\n        },\n        errorCallback: deferred.reject\n      })\n    );\n\n    return new CancellablePromise(deferred, undefined, promises);\n  }\n\n  /**\n   * Checks the status for the given snippet ID\n   * Note: similar to notebook and search check_status.\n   *\n   * @param {Object} options\n   * @param {Object} options.notebookJson\n   * @param {Object} options.snippetJson\n   * @param {boolean} [options.silenceErrors]\n   *\n   * @return {CancellablePromise}\n   */\n  whenAvailable(options) {\n    const self = this;\n    const deferred = $.Deferred();\n    const cancellablePromises = [];\n\n    let waitTimeout = -1;\n\n    deferred.fail(() => {\n      window.clearTimeout(waitTimeout);\n    });\n\n    const waitForAvailable = () => {\n      const request = self\n        .simplePost(\n          '/notebook/api/check_status',\n          {\n            notebook: options.notebookJson,\n            snippet: options.snippetJson,\n            cluster: ko.mapping.toJSON(options.compute ? options.compute : '\"\"')\n          },\n          {\n            silenceErrors: options.silenceErrors\n          }\n        )\n        .done(response => {\n          if (response && response.query_status && response.query_status.status) {\n            const status = response.query_status.status;\n            if (status === 'available') {\n              deferred.resolve();\n            } else if (status === 'running' || status === 'starting' || status === 'waiting') {\n              waitTimeout = window.setTimeout(() => {\n                waitForAvailable();\n              }, 500);\n            } else {\n              deferred.reject();\n            }\n          }\n        })\n        .fail(deferred.reject);\n\n      cancellablePromises.push(new CancellablePromise(request, request));\n    };\n\n    waitForAvailable();\n    return new CancellablePromise(deferred, undefined, cancellablePromises);\n  }\n\n  /**\n   * Fetches samples for the given source and path\n   *\n   * @param {Object} options\n   * @param {boolean} [options.silenceErrors]\n   *\n   * @param {string} options.sourceType\n   * @param {ContextCompute} options.compute\n   * @param {number} [options.sampleCount] - Default 100\n   * @param {string[]} options.path\n   * @param {string} [options.operation] - Default 'default'\n   *\n   * @return {CancellablePromise}\n   */\n  fetchSample(options) {\n    const self = this;\n    const deferred = $.Deferred();\n\n    const cancellablePromises = [];\n\n    let notebookJson = null;\n    let snippetJson = null;\n\n    const cancelQuery = function() {\n      if (notebookJson) {\n        self.simplePost(\n          '/notebook/api/cancel_statement',\n          {\n            notebook: notebookJson,\n            snippet: snippetJson,\n            cluster: ko.mapping.toJSON(options.compute ? options.compute : '\"\"')\n          },\n          { silenceErrors: options.silenceErrors }\n        );\n      }\n    };\n\n    self\n      .simplePost(\n        SAMPLE_API_PREFIX + options.path.join('/'),\n        {\n          notebook: {},\n          snippet: JSON.stringify({\n            type: options.sourceType,\n            compute: options.compute\n          }),\n          async: true,\n          operation: '\"' + (options.operation || 'default') + '\"',\n          cluster: ko.mapping.toJSON(options.compute ? options.compute : '\"\"')\n        },\n        {\n          silenceErrors: options.silenceErrors\n        }\n      )\n      .done(sampleResponse => {\n        const queryResult = new QueryResult(options.sourceType, options.compute, sampleResponse);\n\n        notebookJson = JSON.stringify({ type: options.sourceType });\n        snippetJson = JSON.stringify(queryResult);\n\n        if (sampleResponse && sampleResponse.rows) {\n          // Sync results\n          const data = { data: sampleResponse.rows, meta: sampleResponse.full_headers };\n          data.hueTimestamp = Date.now();\n          deferred.resolve(data);\n        } else {\n          cancellablePromises.push(\n            self\n              .whenAvailable({\n                notebookJson: notebookJson,\n                snippetJson: snippetJson,\n                compute: options.compute,\n                silenceErrors: options.silenceErrors\n              })\n              .done(() => {\n                const resultRequest = self\n                  .simplePost(\n                    '/notebook/api/fetch_result_data',\n                    {\n                      notebook: notebookJson,\n                      snippet: snippetJson,\n                      rows: options.sampleCount || 100,\n                      startOver: 'false'\n                    },\n                    {\n                      silenceErrors: options.silenceErrors\n                    }\n                  )\n                  .done(sampleResponse => {\n                    const data = (sampleResponse && sampleResponse.result) || {\n                      data: [],\n                      meta: []\n                    };\n                    data.hueTimestamp = Date.now();\n                    deferred.resolve(data);\n                  })\n                  .fail(deferred.reject);\n\n                cancellablePromises.push(resultRequest, resultRequest);\n              })\n              .fail(deferred.reject)\n          );\n        }\n      })\n      .fail(deferred.reject);\n\n    cancellablePromises.push({\n      cancel: cancelQuery\n    });\n\n    return new CancellablePromise(deferred, undefined, cancellablePromises);\n  }\n\n  /**\n   * Fetches a navigator entity for the given source and path\n   *\n   * @param {Object} options\n   * @param {boolean} [options.silenceErrors]\n   *\n   * @param {boolean} [options.isView] - Default false\n   * @param {string[]} options.path\n   *\n   * @return {CancellablePromise}\n   */\n  fetchNavigatorMetadata(options) {\n    const self = this;\n    const deferred = $.Deferred();\n    let url = NAV_URLS.FIND_ENTITY;\n\n    if (options.path.length === 1) {\n      url += '?type=database&name=' + options.path[0];\n    } else if (options.path.length === 2) {\n      url +=\n        (options.isView ? '?type=view' : '?type=table') +\n        '&database=' +\n        options.path[0] +\n        '&name=' +\n        options.path[1];\n    } else if (options.path.length === 3) {\n      url +=\n        '?type=field&database=' +\n        options.path[0] +\n        '&table=' +\n        options.path[1] +\n        '&name=' +\n        options.path[2];\n    } else {\n      return new CancellablePromise($.Deferred().reject());\n    }\n\n    const request = self.simplePost(\n      url,\n      {\n        notebook: {},\n        snippet: ko.mapping.toJSON({\n          type: 'nav'\n        })\n      },\n      {\n        silenceErrors: options.silenceErrors,\n        successCallback: function(data) {\n          data = data.entity || data;\n          data.hueTimestamp = Date.now();\n          deferred.resolve(data);\n        },\n        errorCallback: deferred.reject\n      }\n    );\n\n    return new CancellablePromise(deferred, request);\n  }\n\n  /**\n   * Updates Navigator properties and custom metadata for the given entity\n   *\n   * @param {Object} options\n   * @param {string} options.identity - The identifier for the Navigator entity to update\n   * @param {Object} [options.properties]\n   * @param {Object} [options.modifiedCustomMetadata]\n   * @param {string[]} [options.deletedCustomMetadataKeys]\n   * @param {boolean} [options.silenceErrors]\n   *\n   * @return {Promise}\n   */\n  updateNavigatorProperties(options) {\n    const self = this;\n    const data = { id: ko.mapping.toJSON(options.identity) };\n\n    if (options.properties) {\n      data.properties = ko.mapping.toJSON(options.properties);\n    }\n    if (options.modifiedCustomMetadata) {\n      data.modifiedCustomMetadata = ko.mapping.toJSON(options.modifiedCustomMetadata);\n    }\n    if (options.deletedCustomMetadataKeys) {\n      data.deletedCustomMetadataKeys = ko.mapping.toJSON(options.deletedCustomMetadataKeys);\n    }\n    return self.simplePost(NAV_URLS.UPDATE_PROPERTIES, data, options);\n  }\n\n  /**\n   * Lists all available navigator tags\n   *\n   * @param {Object} options\n   * @param {boolean} [options.silenceErrors]\n   *\n   * @return {CancellablePromise}\n   */\n  fetchAllNavigatorTags(options) {\n    const self = this;\n\n    const deferred = $.Deferred();\n\n    const request = self.simplePost(NAV_URLS.LIST_TAGS, undefined, {\n      silenceErrors: options.silenceErrors,\n      successCallback: function(data) {\n        if (data && data.tags) {\n          deferred.resolve(data.tags);\n        } else {\n          deferred.resolve({});\n        }\n      },\n      errorCallback: deferred.reject\n    });\n\n    return new CancellablePromise(deferred, request);\n  }\n\n  addNavTags(entityId, tags) {\n    const self = this;\n    return self.simplePost(NAV_URLS.ADD_TAGS, {\n      id: ko.mapping.toJSON(entityId),\n      tags: ko.mapping.toJSON(tags)\n    });\n  }\n\n  deleteNavTags(entityId, tags) {\n    const self = this;\n    return self.simplePost(NAV_URLS.DELETE_TAGS, {\n      id: ko.mapping.toJSON(entityId),\n      tags: ko.mapping.toJSON(tags)\n    });\n  }\n\n  /**\n   * Fetches navOpt popularity for the children of the given path\n   *\n   * @param {Object} options\n   * @param {boolean} [options.silenceErrors]\n   * @param {string[][]} options.paths\n   * @return {CancellablePromise}\n   */\n  fetchNavOptPopularity(options) {\n    const self = this;\n    const deferred = $.Deferred();\n    let url, data;\n\n    if (options.paths.length === 1 && options.paths[0].length === 1) {\n      url = NAV_OPT_URLS.TOP_TABLES;\n      data = {\n        database: options.paths[0][0]\n      };\n    } else {\n      url = NAV_OPT_URLS.TOP_COLUMNS;\n      const dbTables = [];\n      options.paths.forEach(path => {\n        dbTables.push(path.join('.'));\n      });\n      data = {\n        dbTables: ko.mapping.toJSON(dbTables)\n      };\n    }\n\n    const request = self.simplePost(url, data, {\n      silenceErrors: options.silenceErrors,\n      successCallback: function(data) {\n        data.hueTimestamp = Date.now();\n        deferred.resolve(data);\n      },\n      errorCallback: deferred.reject\n    });\n\n    return new CancellablePromise(deferred, request);\n  }\n\n  /**\n   * Fetches the popular aggregate functions for the given tables\n   *\n   * @param {Object} options\n   * @param {boolean} [options.silenceErrors]\n   * @param {string[][]} options.paths\n   * @return {CancellablePromise}\n   */\n  fetchNavOptTopAggs(options) {\n    return genericNavOptMultiTableFetch(this, options, NAV_OPT_URLS.TOP_AGGS);\n  }\n\n  /**\n   * Fetches the popular columns for the given tables\n   *\n   * @param {Object} options\n   * @param {boolean} [options.silenceErrors]\n   * @param {string[][]} options.paths\n   * @return {CancellablePromise}\n   */\n  fetchNavOptTopColumns(options) {\n    return genericNavOptMultiTableFetch(this, options, NAV_OPT_URLS.TOP_COLUMNS);\n  }\n\n  /**\n   * Fetches the popular filters for the given tables\n   *\n   * @param {Object} options\n   * @param {boolean} [options.silenceErrors]\n   * @param {string[][]} options.paths\n   * @return {CancellablePromise}\n   */\n  fetchNavOptTopFilters(options) {\n    return genericNavOptMultiTableFetch(this, options, NAV_OPT_URLS.TOP_FILTERS);\n  }\n\n  /**\n   * Fetches the popular joins for the given tables\n   *\n   * @param {Object} options\n   * @param {boolean} [options.silenceErrors]\n   * @param {string[][]} options.paths\n   * @return {CancellablePromise}\n   */\n  fetchNavOptTopJoins(options) {\n    return genericNavOptMultiTableFetch(this, options, NAV_OPT_URLS.TOP_JOINS);\n  }\n\n  /**\n   * Fetches navOpt meta for the given path, only possible for tables atm.\n   *\n   * @param {Object} options\n   * @param {boolean} [options.silenceErrors]\n   * @param {string[]} options.path\n   *\n   * @return {CancellablePromise}\n   */\n  fetchNavOptMeta(options) {\n    const self = this;\n    const deferred = $.Deferred();\n\n    const request = self.simplePost(\n      NAV_OPT_URLS.TABLE_DETAILS,\n      {\n        databaseName: options.path[0],\n        tableName: options.path[1]\n      },\n      {\n        silenceErrors: options.silenceErrors,\n        successCallback: function(response) {\n          if (response.status === 0 && response.details) {\n            response.details.hueTimestamp = Date.now();\n            deferred.resolve(response.details);\n          } else {\n            deferred.reject();\n          }\n        },\n        errorCallback: deferred.reject\n      }\n    );\n\n    return new CancellablePromise(deferred, request);\n  }\n\n  /**\n   * @param {Object} options\n   * @param {boolean} [options.silenceErrors]\n   * @param {ContextCompute} options.compute\n   * @param {string} options.queryId\n   * @return {CancellablePromise}\n   */\n  fetchQueryExecutionAnalysis(options) {\n    const self = this;\n    //var url = '/metadata/api/workload_analytics/get_impala_query/';\n    const url = '/impala/api/query/alanize';\n    const deferred = $.Deferred();\n\n    let tries = 0;\n\n    const cancellablePromises = [];\n\n    const promise = new CancellablePromise(deferred, undefined, cancellablePromises);\n\n    const pollForAnalysis = () => {\n      if (tries === 10) {\n        deferred.reject();\n        return;\n      }\n      tries++;\n      cancellablePromises.pop(); // Remove the last one\n      cancellablePromises.push(\n        deferred,\n        self\n          .simplePost(\n            url,\n            {\n              cluster: JSON.stringify(options.compute),\n              query_id: '\"' + options.queryId + '\"'\n            },\n            options\n          )\n          .done(response => {\n            if (response && response.data) {\n              deferred.resolve(response.data);\n            } else {\n              const timeout = window.setTimeout(() => {\n                pollForAnalysis();\n              }, 1000 + tries * 500); // TODO: Adjust once fully implemented;\n              promise.onCancel(() => {\n                window.clearTimeout(timeout);\n              });\n            }\n          })\n          .fail(deferred.reject)\n      );\n    };\n\n    pollForAnalysis();\n\n    return promise;\n  }\n\n  fixQueryExecutionAnalysis(options) {\n    const self = this;\n    const url = '/impala/api/query/alanize/fix';\n    const deferred = $.Deferred();\n\n    const request = self.simplePost(\n      url,\n      {\n        cluster: JSON.stringify(options.compute),\n        fix: JSON.stringify(options.fix),\n        start_time: options.start_time\n      },\n      {\n        silenceErrors: options.silenceErrors,\n        successCallback: function(response) {\n          if (response.status === 0) {\n            deferred.resolve(response.details);\n          } else {\n            deferred.reject();\n          }\n        },\n        errorCallback: deferred.reject\n      }\n    );\n\n    return new CancellablePromise(deferred, request);\n  }\n\n  fetchQueryExecutionStatistics(options) {\n    const self = this;\n    const url = '/impala/api/query/alanize/metrics';\n    const deferred = $.Deferred();\n\n    const request = self.simplePost(\n      url,\n      {\n        cluster: JSON.stringify(options.cluster),\n        query_id: '\"' + options.queryId + '\"'\n      },\n      {\n        silenceErrors: options.silenceErrors,\n        successCallback: function(response) {\n          if (response.status === 0) {\n            deferred.resolve(response.data);\n          } else {\n            deferred.reject();\n          }\n        },\n        errorCallback: deferred.reject\n      }\n    );\n\n    return new CancellablePromise(deferred, request);\n  }\n\n  /**\n   * @param {Object} options\n   * @param {boolean} [options.silenceErrors]\n   * @param {string} options.sourceType\n   * @return {Promise}\n   */\n  fetchContextNamespaces(options) {\n    const self = this;\n    const url = '/desktop/api2/context/namespaces/' + options.sourceType;\n    return self.simpleGet(url, undefined, options);\n  }\n\n  /**\n   * @param {Object} options\n   * @param {boolean} [options.silenceErrors]\n   * @param {string} options.sourceType\n   * @return {Promise}\n   */\n  fetchContextComputes(options) {\n    const self = this;\n    const url = '/desktop/api2/context/computes/' + options.sourceType;\n    return self.simpleGet(url, undefined, options);\n  }\n\n  /**\n   * @param {Object} options\n   * @param {boolean} [options.silenceErrors]\n   * @param {string} options.sourceType\n   * @return {Promise}\n   */\n  fetchContextClusters(options) {\n    const self = this;\n    const url = '/desktop/api2/context/clusters/' + options.sourceType;\n    return self.simpleGet(url, undefined, options);\n  }\n\n  getClusterConfig(data) {\n    return $.post(FETCH_CONFIG, data);\n  }\n\n  fetchHueDocsInteractive(query) {\n    const deferred = $.Deferred();\n    const request = $.post(INTERACTIVE_SEARCH_API, {\n      query_s: ko.mapping.toJSON(query),\n      limit: 50,\n      sources: '[\"documents\"]'\n    })\n      .done(data => {\n        if (data.status === 0) {\n          deferred.resolve(data);\n        } else {\n          deferred.reject(data);\n        }\n      })\n      .fail(deferred.reject);\n    return new CancellablePromise(deferred, request);\n  }\n\n  fetchNavEntitiesInteractive(options) {\n    const deferred = $.Deferred();\n    const request = $.post(INTERACTIVE_SEARCH_API, {\n      query_s: ko.mapping.toJSON(options.query),\n      field_facets: ko.mapping.toJSON(options.facets || []),\n      limit: 50,\n      sources: '[\"sql\", \"hdfs\", \"s3\"]'\n    })\n      .done(data => {\n        if (data.status === 0) {\n          deferred.resolve(data);\n        } else {\n          deferred.reject(data);\n        }\n      })\n      .fail(deferred.reject);\n    return new CancellablePromise(deferred, request);\n  }\n\n  searchEntities(options) {\n    const self = this;\n    const deferred = $.Deferred();\n\n    const request = self.simplePost(\n      SEARCH_API,\n      {\n        query_s: ko.mapping.toJSON(options.query),\n        limit: options.limit || 100,\n        raw_query: !!options.rawQuery,\n        sources: options.sources ? ko.mapping.toJSON(options.sources) : '[\"sql\"]'\n      },\n      {\n        silenceErrors: options.silenceErrors,\n        successCallback: deferred.resolve,\n        errorCallback: deferred.reject\n      }\n    );\n\n    return new CancellablePromise(deferred, request);\n  }\n\n  /**\n   *\n   * @param {Object} options\n   * @param {string} options.statements\n   * @param {boolean} [options.silenceErrors]\n   */\n  formatSql(options) {\n    const self = this;\n    const deferred = $.Deferred();\n\n    const request = self.simplePost(\n      FORMAT_SQL_API,\n      {\n        statements: options.statements\n      },\n      {\n        silenceErrors: options.silenceErrors,\n        successCallback: deferred.resolve,\n        errorCallback: deferred.reject\n      }\n    );\n\n    return new CancellablePromise(deferred, request);\n  }\n}\n\nconst apiHelper = new ApiHelper();\n\nexport default apiHelper;\n","// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  Cloudera, Inc. licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nclass ApiQueueManager {\n  constructor() {\n    const self = this;\n    self.callQueue = {};\n  }\n\n  getQueued(url, hash) {\n    const self = this;\n    return self.callQueue[url + (hash || '')];\n  }\n\n  addToQueue(promise, url, hash) {\n    const self = this;\n    self.callQueue[url + (hash || '')] = promise;\n    promise.always(() => {\n      delete self.callQueue[url + (hash || '')];\n    });\n  }\n}\n\nconst apiQueueManager = new ApiQueueManager();\n\nexport default apiQueueManager;\n","// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  Cloudera, Inc. licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport apiHelper from 'api/apiHelper';\n\nclass CancellablePromise {\n  constructor(deferred, request, otherCancellables) {\n    const self = this;\n    self.cancelCallbacks = [];\n    self.deferred = deferred;\n    self.request = request;\n    self.otherCancellables = otherCancellables;\n    self.cancelled = false;\n    self.cancelPrevented = false;\n  }\n\n  /**\n   * A promise might be shared across multiple components in the UI, in some cases cancel is not an option and calling\n   * this will prevent that to happen.\n   *\n   * One example is autocompletion of databases while the assist is loading the database tree, closing the autocomplete\n   * results would make the assist loading fail if cancel hasn't been prevented.\n   *\n   * @returns {CancellablePromise}\n   */\n  preventCancel() {\n    const self = this;\n    self.cancelPrevented = true;\n    return self;\n  }\n\n  cancel() {\n    const self = this;\n    if (self.cancelPrevented || self.cancelled || self.state() !== 'pending') {\n      return;\n    }\n    self.cancelled = true;\n    if (self.request) {\n      apiHelper.cancelActiveRequest(self.request);\n    }\n\n    if (self.state && self.state() === 'pending' && self.deferred.reject) {\n      self.deferred.reject();\n    }\n\n    if (self.otherCancellables) {\n      self.otherCancellables.forEach(cancellable => {\n        if (cancellable.cancel) {\n          cancellable.cancel();\n        }\n      });\n    }\n\n    while (self.cancelCallbacks.length) {\n      self.cancelCallbacks.pop()();\n    }\n    return self;\n  }\n\n  onCancel(callback) {\n    const self = this;\n    if (self.cancelled) {\n      callback();\n    } else {\n      self.cancelCallbacks.push(callback);\n    }\n    return self;\n  }\n\n  then() {\n    const self = this;\n    self.deferred.then.apply(self.deferred, arguments);\n    return self;\n  }\n\n  done(callback) {\n    const self = this;\n    self.deferred.done.apply(self.deferred, arguments);\n    return self;\n  }\n\n  fail(callback) {\n    const self = this;\n    self.deferred.fail.apply(self.deferred, arguments);\n    return self;\n  }\n\n  always(callback) {\n    const self = this;\n    self.deferred.always.apply(self.deferred, arguments);\n    return self;\n  }\n\n  pipe(callback) {\n    const self = this;\n    self.deferred.pipe.apply(self.deferred, arguments);\n    return self;\n  }\n\n  progress(callback) {\n    const self = this;\n    self.deferred.progress.apply(self.deferred, arguments);\n    return self;\n  }\n\n  state() {\n    const self = this;\n    return self.deferred.state && self.deferred.state();\n  }\n}\n\nexport default CancellablePromise;\n","// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  Cloudera, Inc. licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport localforage from 'localforage';\n\nconst hueDebug = {\n  clearCaches: function() {\n    const promises = [];\n    const clearInstance = function(prefix) {\n      promises.push(localforage.createInstance({ name: prefix + LOGGED_USERNAME }).clear());\n    };\n    clearInstance('HueContextCatalog_');\n    clearInstance('HueDataCatalog_');\n    clearInstance('HueDataCatalog_hive_');\n    clearInstance('HueDataCatalog_hive_multiTable_');\n    clearInstance('HueDataCatalog_impala_');\n    clearInstance('HueDataCatalog_impala_multiTable_');\n    Promise.all(promises).then(() => {\n      console.log('Done! Refresh the browser.');\n    });\n  }\n};\n\nexport default hueDebug;\n","// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  Cloudera, Inc. licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// Based on original pub/sub implementation from http://davidwalsh.name/pubsub-javascript\n\nconst topics = {};\nconst hOP = topics.hasOwnProperty;\n\nconst huePubSub = {\n  subscribe: function(topic, listener, app) {\n    if (!hOP.call(topics, topic)) {\n      topics[topic] = [];\n    }\n\n    const index =\n      topics[topic].push({\n        listener: listener,\n        app: app,\n        status: 'running'\n      }) - 1;\n\n    return {\n      remove: function() {\n        delete topics[topic][index];\n      }\n    };\n  },\n  removeAll: function(topic) {\n    topics[topic] = [];\n  },\n  subscribeOnce: function(topic, listener, app) {\n    const ephemeral = this.subscribe(\n      topic,\n      function() {\n        listener.apply(listener, arguments);\n        ephemeral.remove();\n      },\n      app\n    );\n  },\n  publish: function(topic, info) {\n    if (!hOP.call(topics, topic)) {\n      return;\n    }\n\n    topics[topic].forEach(item => {\n      if (item.status === 'running') {\n        item.listener(info);\n      }\n    });\n  },\n  getTopics: function() {\n    return topics;\n  },\n  pauseAppSubscribers: function(app) {\n    if (app) {\n      Object.keys(topics).forEach(topicName => {\n        topics[topicName].forEach(topic => {\n          if (\n            typeof topic.app !== 'undefined' &&\n            topic.app !== null &&\n            (topic.app === app || topic.app.split('-')[0] === app)\n          ) {\n            topic.status = 'paused';\n          }\n        });\n      });\n    }\n  },\n  resumeAppSubscribers: function(app) {\n    if (app) {\n      Object.keys(topics).forEach(topicName => {\n        topics[topicName].forEach(topic => {\n          if (\n            typeof topic.app !== 'undefined' &&\n            topic.app !== null &&\n            (topic.app === app || topic.app.split('-')[0] === app)\n          ) {\n            topic.status = 'running';\n          }\n        });\n      });\n    }\n  },\n  clearAppSubscribers: function(app) {\n    if (app) {\n      Object.keys(topics).forEach(topicName => {\n        topics[topicName] = topics[topicName].filter(obj => {\n          return obj.app !== app;\n        });\n      });\n    }\n  }\n};\n\nexport default huePubSub;\n","// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  Cloudera, Inc. licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport $ from 'jquery';\n\nconst bootstrapRatios = {\n  span3() {\n    const windowWidth = $(window).width();\n    if (windowWidth >= 1200) {\n      return 23.07692308;\n    } else if (windowWidth >= 768 && windowWidth <= 979) {\n      return 22.9281768;\n    } else {\n      return 23.17073171;\n    }\n  },\n  span9() {\n    const windowWidth = $(window).width();\n    if (windowWidth >= 1200) {\n      return 74.35897436;\n    } else if (windowWidth >= 768 && windowWidth <= 979) {\n      return 74.30939227;\n    } else {\n      return 74.3902439;\n    }\n  },\n  margin() {\n    return 2.56410256;\n  }\n};\n\n/**\n * Convert text to URLs\n * Selector arg can be jQuery or document.querySelectorAll()\n *\n * @param selectors\n * @return {default}\n */\nconst text2Url = selectors => {\n  let i = 0;\n  const len = selectors.length;\n\n  for (i; i < len; i++) {\n    const arr = [],\n      selector = selectors[i],\n      val = selector.innerHTML.replace(/&nbsp;/g, ' ').split(' ');\n\n    val.forEach(word => {\n      let matched = null;\n      const re = /(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?/gi;\n\n      if (re.test(word)) {\n        matched = word.match(re);\n        word = word.replace(matched, '<a href=\"' + matched + '\">' + matched + '</a>');\n        arr.push(word);\n      } else {\n        arr.push(word);\n      }\n    });\n\n    selector.innerHTML = arr.join(' ');\n  }\n  return this;\n};\n\n/**\n * Create a in-memory div, set it's inner text(which jQuery automatically encodes)\n * then grab the encoded contents back out.\n *\n * @param value\n * @return {*|jQuery}\n */\nconst htmlEncode = value => {\n  return $('<div/>')\n    .text(value)\n    .html();\n};\n\nconst html2text = value => {\n  return $('<div/>')\n    .html(value)\n    .text()\n    .replace(/\\u00A0/g, ' ');\n};\n\nconst goFullScreen = () => {\n  if (\n    !document.fullscreenElement &&\n    !document.mozFullScreenElement &&\n    !document.webkitFullscreenElement &&\n    !document.msFullscreenElement\n  ) {\n    if (document.documentElement.requestFullscreen) {\n      document.documentElement.requestFullscreen();\n    } else if (document.documentElement.msRequestFullscreen) {\n      document.documentElement.msRequestFullscreen();\n    } else if (document.documentElement.mozRequestFullScreen) {\n      document.documentElement.mozRequestFullScreen();\n    } else if (document.documentElement.webkitRequestFullscreen) {\n      document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n    }\n  }\n};\n\nconst exitFullScreen = () => {\n  if (\n    document.fullscreenElement ||\n    document.mozFullScreenElement ||\n    document.webkitFullscreenElement ||\n    document.msFullscreenElement\n  ) {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    }\n  }\n};\n\nconst changeURL = (newURL, params) => {\n  let extraSearch = '';\n  if (params) {\n    const newSearchKeys = Object.keys(params);\n    if (newSearchKeys.length) {\n      while (newSearchKeys.length) {\n        const newKey = newSearchKeys.pop();\n        extraSearch += newKey + '=' + params[newKey];\n        if (newSearchKeys.length) {\n          extraSearch += '&';\n        }\n      }\n    }\n  }\n\n  if (typeof IS_EMBEDDED !== 'undefined' && IS_EMBEDDED) {\n    let search = window.location.search;\n    if (extraSearch) {\n      search += (search ? '&' : '?') + extraSearch;\n    }\n    newURL = window.location.pathname + search + '#!' + newURL.replace('/hue', '');\n    window.history.pushState(null, null, newURL);\n    return;\n  }\n\n  const hashSplit = newURL.split('#');\n  let url = hashSplit[0];\n  if (extraSearch) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + extraSearch;\n  }\n  if (hashSplit.length > 1) {\n    url += '#' + hashSplit[1];\n  } else if (window.location.hash) {\n    url += window.location.hash;\n  }\n  window.history.pushState(null, null, url);\n};\n\nconst replaceURL = newURL => {\n  window.history.replaceState(null, null, newURL);\n};\n\nconst changeURLParameter = (param, value) => {\n  if (typeof IS_EMBEDDED !== 'undefined' && IS_EMBEDDED) {\n    const currentUrl = window.location.hash.replace('#!', '');\n    const parts = currentUrl.split('?');\n    const path = parts[0];\n    let search = parts.length > 1 ? parts[1] : '';\n    if (~search.indexOf(param + '=' + value)) {\n      return;\n    }\n    if (~search.indexOf(param + '=')) {\n      if (!value) {\n        search = search.replace(new RegExp(param + '=[^&]*&?'), '');\n      } else {\n        search = search.replace(new RegExp(param + '=[^&]*'), param + '=' + value);\n      }\n    } else if (value) {\n      if (search) {\n        search += '&';\n      }\n      search += param + '=' + value;\n    } else {\n      return;\n    }\n\n    changeURL(search ? path + '?' + search : path);\n  } else {\n    let newSearch = '';\n    if (window.location.getParameter(param, true) !== null) {\n      newSearch += '?';\n      window.location.search\n        .replace(/\\?/gi, '')\n        .split('&')\n        .forEach(p => {\n          if (p.split('=')[0] !== param) {\n            newSearch += p;\n          }\n        });\n      if (value) {\n        newSearch += (newSearch !== '?' ? '&' : '') + param + '=' + value;\n      }\n    } else {\n      newSearch =\n        window.location.search +\n        (value ? (window.location.search.indexOf('?') > -1 ? '&' : '?') + param + '=' + value : '');\n    }\n\n    if (newSearch === '?') {\n      newSearch = '';\n    }\n\n    changeURL(window.location.pathname + newSearch);\n  }\n};\n\nconst removeURLParameter = param => {\n  changeURLParameter(param, null);\n};\n\nconst parseHivePseudoJson = pseudoJson => {\n  // Hive returns a pseudo-json with parameters, like\n  // \"{Lead Developer=John Foo, Lead Developer Email=jfoo@somewhere.com, date=2013-07-11 }\"\n  const parsedParams = {};\n  if (pseudoJson && pseudoJson.length > 2) {\n    const splits = pseudoJson.substring(1, pseudoJson.length - 1).split(', ');\n    splits.forEach(part => {\n      if (part.indexOf('=') > -1) {\n        parsedParams[part.split('=')[0]] = part.split('=')[1];\n      }\n    });\n  }\n  return parsedParams;\n};\n\nconst isOverflowing = element => {\n  if (element instanceof $) {\n    element = element[0];\n  }\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n};\n\nconst waitForRendered = (selector, condition, callback, timeout) => {\n  const $el = selector instanceof $ ? selector : $(selector);\n  if (condition($el)) {\n    callback($el);\n  } else {\n    window.clearTimeout($el.data('waitForRenderTimeout'));\n    const waitForRenderTimeout = window.setTimeout(() => {\n      waitForRendered(selector, condition, callback);\n    }, timeout || 100);\n    $el.data('waitForRenderTimeout', waitForRenderTimeout);\n  }\n};\n\nconst waitForObservable = (observable, callback) => {\n  if (observable()) {\n    callback(observable);\n  } else {\n    const subscription = observable.subscribe(newValue => {\n      if (newValue) {\n        subscription.dispose();\n        callback(observable);\n      }\n    });\n  }\n};\n\nconst waitForVariable = (variable, callback, timeout) => {\n  if (variable) {\n    callback(variable);\n  } else {\n    window.setTimeout(() => {\n      waitForVariable(variable, callback);\n    }, timeout || 100);\n  }\n};\n\nconst scrollbarWidth = () => {\n  const $parent = $('<div style=\"width:50px;height:50px;overflow:auto\"><div/></div>').appendTo(\n    HUE_CONTAINER\n  );\n  const $children = $parent.children();\n  const width = $children.innerWidth() - $children.height(99).innerWidth();\n  $parent.remove();\n  return width;\n};\n\nconst getSearchParameter = (search, name, returnNull) => {\n  name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n  const regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)'),\n    results = regex.exec(search);\n  if (returnNull && results === null) {\n    return null;\n  }\n  return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n};\n\nconst logError = error => {\n  if (typeof window.console !== 'undefined' && typeof window.console.error !== 'undefined') {\n    if (typeof error !== 'undefined') {\n      console.error(error);\n    }\n    console.error(new Error().stack);\n  }\n};\n\nconst equalIgnoreCase = (a, b) => a && b && a.toLowerCase() === b.toLowerCase();\n\nconst deXSS = str => {\n  if (typeof str !== 'undefined' && str !== null && typeof str === 'string') {\n    return str.replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '');\n  }\n  return str;\n};\n\nconst getStyleFromCSSClass = cssClass => {\n  for (let i = 0; i < document.styleSheets.length; i++) {\n    const cssClasses = document.styleSheets[i].rules || document.styleSheets[i].cssRules;\n    for (let x = 0; x < cssClasses.length; x++) {\n      if (cssClasses[x].selectorText === cssClass) {\n        return cssClasses[x].style ? cssClasses[x].style : cssClasses[x];\n      }\n    }\n  }\n};\n\nconst highlight = (text, searchTerm) => {\n  if (searchTerm === '' || text === '') {\n    return text;\n  }\n\n  let remText = text;\n  let highLightedText = '';\n  searchTerm = searchTerm.toLowerCase();\n\n  let startIndex;\n  do {\n    const remLowerText = remText.toLowerCase();\n    startIndex = remLowerText.indexOf(searchTerm);\n    if (startIndex >= 0) {\n      highLightedText +=\n        remText.substring(0, startIndex) +\n        '<strong>' +\n        remText.substring(startIndex, startIndex + searchTerm.length) +\n        '</strong>';\n      remText = remText.substring(startIndex + searchTerm.length);\n    } else {\n      highLightedText += remText;\n    }\n  } while (startIndex >= 0);\n\n  return highLightedText;\n};\n\nconst dfs = (node, callback) => {\n  if (!node || typeof node !== 'object') {\n    return;\n  }\n  Object.keys(node).forEach(key => {\n    callback(node, key);\n    dfs(node[key], callback);\n  });\n};\n\nconst deleteAllEmptyStringKey = node => {\n  const fDeleteEmptyStringKey = function(node, key) {\n    if (node[key] || typeof node[key] !== 'string') {\n      return;\n    }\n    delete node[key];\n  };\n  dfs(node, fDeleteEmptyStringKey);\n};\n\nconst s4 = () =>\n  Math.floor((1 + Math.random()) * 0x10000)\n    .toString(16)\n    .substring(1);\n\nconst UUID = () => s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n\nconst escapeOutput = str =>\n  $('<span>')\n    .text(str)\n    .html()\n    .trim();\n\nconst getFileBrowseButton = (\n  inputElement,\n  selectFolder,\n  valueAccessor,\n  stripHdfsPrefix,\n  allBindingsAccessor,\n  isAddon,\n  isNestedModal,\n  linkMarkup\n) => {\n  let _btn;\n  if (isAddon) {\n    _btn = $('<span>')\n      .addClass('add-on muted pointer filechooser-clickable')\n      .text('..');\n  } else if (linkMarkup) {\n    _btn = $('<a>')\n      .addClass('btn')\n      .addClass('fileChooserBtn filechooser-clickable')\n      .text('..');\n  } else {\n    _btn = $('<button>')\n      .addClass('btn')\n      .addClass('fileChooserBtn filechooser-clickable')\n      .text('..');\n  }\n  _btn.click(e => {\n    e.preventDefault();\n    if (!isNestedModal) {\n      $(window.HUE_CONTAINER).addClass('modal-open');\n    }\n\n    function callFileChooser() {\n      let _initialPath = $.trim(inputElement.val()) !== '' ? inputElement.val() : '/';\n      if (\n        (allBindingsAccessor &&\n          allBindingsAccessor().filechooserOptions &&\n          allBindingsAccessor().filechooserOptions.skipInitialPathIfEmpty &&\n          inputElement.val() === '') ||\n        (allBindingsAccessor && allBindingsAccessor().filechooserPrefixSeparator)\n      ) {\n        _initialPath = '';\n      }\n      if (inputElement.data('fullPath')) {\n        _initialPath = inputElement.data('fullPath');\n      }\n      if (_initialPath.indexOf('hdfs://') > -1) {\n        _initialPath = _initialPath.substring(7);\n      }\n\n      let supportSelectFolder = !!selectFolder;\n      if (\n        allBindingsAccessor &&\n        typeof allBindingsAccessor().filechooserOptions !== 'undefined' &&\n        typeof allBindingsAccessor().filechooserOptions.selectFolder !== 'undefined'\n      ) {\n        supportSelectFolder = allBindingsAccessor().filechooserOptions.selectFolder;\n      }\n\n      $('#filechooser').jHueFileChooser({\n        suppressErrors: true,\n        selectFolder: supportSelectFolder,\n        onFolderChoose: function(filePath) {\n          handleChoice(filePath, stripHdfsPrefix);\n          if (selectFolder) {\n            $('#chooseFile').modal('hide');\n            if (!isNestedModal) {\n              $('.modal-backdrop').remove();\n            }\n          }\n        },\n        onFileChoose: function(filePath) {\n          handleChoice(filePath, stripHdfsPrefix);\n          $('#chooseFile').modal('hide');\n          if (!isNestedModal) {\n            $('.modal-backdrop').remove();\n          }\n        },\n        createFolder:\n          allBindingsAccessor &&\n          allBindingsAccessor().filechooserOptions &&\n          allBindingsAccessor().filechooserOptions.createFolder,\n        uploadFile:\n          allBindingsAccessor &&\n          allBindingsAccessor().filechooserOptions &&\n          allBindingsAccessor().filechooserOptions.uploadFile,\n        initialPath: _initialPath,\n        errorRedirectPath: '',\n        forceRefresh: true,\n        showExtraHome:\n          allBindingsAccessor &&\n          allBindingsAccessor().filechooserOptions &&\n          allBindingsAccessor().filechooserOptions.showExtraHome,\n        extraHomeProperties:\n          allBindingsAccessor &&\n          allBindingsAccessor().filechooserOptions &&\n          allBindingsAccessor().filechooserOptions.extraHomeProperties\n            ? allBindingsAccessor().filechooserOptions.extraHomeProperties\n            : {},\n        filterExtensions:\n          allBindingsAccessor && allBindingsAccessor().filechooserFilter\n            ? allBindingsAccessor().filechooserFilter\n            : '',\n        displayOnlyFolders:\n          allBindingsAccessor &&\n          allBindingsAccessor().filechooserOptions &&\n          allBindingsAccessor().filechooserOptions.displayOnlyFolders\n      });\n      if (window.isIE11) {\n        const oldFocus = $().modal.Constructor.prototype.enforceFocus;\n        $().modal.Constructor.prototype.enforceFocus = function() {};\n        $('#chooseFile').modal('show');\n        window.setTimeout(() => {\n          $().modal.Constructor.prototype.enforceFocus = oldFocus;\n        }, 5000);\n      } else {\n        $('#chooseFile').modal('show');\n      }\n      if (!isNestedModal) {\n        $('#chooseFile').on('hidden', () => {\n          $(window.HUE_CONTAINER).removeClass('modal-open');\n          $('.modal-backdrop').remove();\n        });\n      }\n    }\n\n    // check if it's a relative path\n    callFileChooser();\n\n    function handleChoice(filePath, stripHdfsPrefix) {\n      if (allBindingsAccessor && allBindingsAccessor().filechooserPrefixSeparator) {\n        filePath =\n          inputElement.val().split(allBindingsAccessor().filechooserPrefixSeparator)[0] +\n          '=' +\n          filePath;\n      }\n      if (\n        allBindingsAccessor &&\n        allBindingsAccessor().filechooserOptions &&\n        allBindingsAccessor().filechooserOptions.deploymentDir\n      ) {\n        inputElement.data('fullPath', filePath);\n        inputElement.attr('data-original-title', filePath);\n        if (filePath.indexOf(allBindingsAccessor().filechooserOptions.deploymentDir) === 0) {\n          filePath = filePath.substr(\n            allBindingsAccessor().filechooserOptions.deploymentDir.length + 1\n          );\n        }\n      }\n      if (stripHdfsPrefix) {\n        inputElement.val(filePath);\n      } else {\n        inputElement.val('hdfs://' + filePath);\n      }\n      inputElement.change();\n      if (valueAccessor) {\n        if (typeof valueAccessor() == 'function' || typeof valueAccessor().value == 'function') {\n          if (valueAccessor().value) {\n            valueAccessor().value(inputElement.val());\n            if (valueAccessor().displayJustLastBit) {\n              inputElement.data('fullPath', inputElement.val());\n              inputElement.attr('data-original-title', inputElement.val());\n              const _val = inputElement.val();\n              inputElement.val(_val.split('/')[_val.split('/').length - 1]);\n            }\n          } else {\n            valueAccessor()(inputElement.val());\n          }\n        } else {\n          valueAccessor(inputElement.val());\n        }\n      }\n    }\n  });\n  if (allBindingsAccessor && allBindingsAccessor().filechooserDisabled) {\n    _btn.addClass('disabled').attr('disabled', 'disabled');\n  }\n  return _btn;\n};\n\nconst stripHtml = html => {\n  const tmp = document.createElement('DIV');\n  tmp.innerHTML = html;\n  return tmp.textContent || tmp.innerText;\n};\n\nconst stripHtmlFromFunctions = template => {\n  // strips HTML from inside the functions\n  let _tmpl = template;\n  const _mustacheFunctions = _tmpl.match(/{{#(.[\\s\\S]*?){{\\//g);\n  if (_mustacheFunctions) {\n    $.each(_mustacheFunctions, (cnt, fn) => {\n      _tmpl = _tmpl.replace(\n        fn,\n        fn.substr(0, fn.indexOf('}}') + 2) +\n          $.trim(stripHtml(fn.substr(fn.indexOf('}}') + 2).slice(0, -3))) +\n          '{{/'\n      );\n    });\n  }\n  return _tmpl;\n};\n\nexport default {\n  bootstrapRatios: bootstrapRatios,\n  getFileBrowseButton: getFileBrowseButton,\n  text2Url: text2Url,\n  htmlEncode: htmlEncode,\n  html2text: html2text,\n  goFullScreen: goFullScreen,\n  exitFullScreen: exitFullScreen,\n  changeURL: changeURL,\n  replaceURL: replaceURL,\n  changeURLParameter: changeURLParameter,\n  removeURLParameter: removeURLParameter,\n  parseHivePseudoJson: parseHivePseudoJson,\n  isOverflowing: isOverflowing,\n  waitForRendered: waitForRendered,\n  waitForObservable: waitForObservable,\n  waitForVariable: waitForVariable,\n  scrollbarWidth: scrollbarWidth,\n  getSearchParameter: getSearchParameter,\n  logError: logError,\n  equalIgnoreCase: equalIgnoreCase,\n  deXSS: deXSS,\n  getStyleFromCSSClass: getStyleFromCSSClass,\n  highlight: highlight,\n  dfs: dfs,\n  deleteAllEmptyStringKey: deleteAllEmptyStringKey,\n  UUID: UUID,\n  escapeOutput: escapeOutput,\n  stripHtmlFromFunctions: stripHtmlFromFunctions\n};\n"],"sourceRoot":""}